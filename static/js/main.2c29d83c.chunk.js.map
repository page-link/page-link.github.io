{"version":3,"sources":["services/api.ts","services/profileService.ts","Context/Main/index.tsx","Context/QuoteItems/index.tsx","Pages/Admin/styles.ts","Pages/Admin/index.tsx","Pages/Login/styles.ts","Pages/Login/index.tsx","Pages/Logout/index.tsx","components/Button/index.tsx","components/ButtonIcon/styles.ts","components/ButtonIcon/index.tsx","components/Column/index.tsx","components/LabelCustom/index.tsx","components/InputForm/styles.ts","components/InputForm/index.tsx","utils/masks.ts","components/Panel/index.tsx","components/Row/index.tsx","components/RowPanel/index.tsx","components/RowPanel/CenterPanel/index.tsx","components/RowPanel/LeftPanel/index.tsx","components/RowPanel/RightPanel/index.tsx","components/SelectForm/style.ts","components/SelectForm/index.tsx","components/Text/index.tsx","services/quoteService.ts","Pages/Quotes/styles.ts","Pages/Quotes/index.tsx","utils/scrool.ts","components/QuoteItemsCsv/styles.ts","components/QuoteItemsCsv/index.tsx","MoocasData/QuotesDetail/index.tsx","services/quoteDetailService.ts","components/QuoteDetailPrint/styles.ts","components/QuoteDetailPrint/index.tsx","components/QuotesItemsForm/styles.ts","components/QuotesItemsForm/index.tsx","components/QuotesItems/styles.ts","components/QuotesItems/index.tsx","utils/exportCSV.ts","Pages/QuotesDetail/styles.ts","Pages/QuotesDetail/index.tsx","utils/mappersCSV.ts","Pages/RegisterSupplier/styles.ts","services/supplierService.ts","Pages/RegisterSupplier/index.tsx","Routes/index.tsx","components/Loading/styles.ts","components/Loading/index.tsx","components/Profile/styles.ts","assets/avatar-default.svg","components/Profile/index.tsx","components/Menu/styles.ts","components/Menu/index.tsx","components/Main/styles.ts","components/Header/styles.ts","components/Header/index.tsx","components/Main/index.tsx","styles/GlobalStyles.ts","App.tsx","utils/parses.ts","index.tsx"],"names":["api","axios","create","baseURL","process","withCredentials","headers","ProfileService","LoginService","googleId","email","setLoading","a","post","data","success","errors","defaults","common","Authorization","token","user","console","log","RefreshToken","get","MainContext","createContext","MainContextProvider","children","useState","menuOpen","setMenuOpen","loading","profile","setProfile","handleSetLoading","useCallback","value","handleSetMenuOpen","handleSetProfile","useEffect","resultProfile","refreshToken","Provider","useMainContext","React","useContext","ContextQuoteItems","ContextQuoteItemsProvider","quoteItems","setQuoteItems","handleSetQuoteItems","items","quoteItemsContext","setQuoteItemsContext","useContextQuoteItems","Container","styled","div","Admin","Wrapper","LogoCompany","img","WapperTop","Login","useRef","unauthorized","setUnauthorized","history","useHistory","handleLoginSuccess","response","profileObj","name","imageUrl","Name","ImageUrl","push","handleLoginError","company","setCompany","to","src","clientId","buttonText","onSuccess","onFailure","type","className","Logout","Button","button","secondary","outlined","handleBackground","width","handleBackgroundHover","backColor","colorIcon","textColor","ButtonIcon","text","onClick","Column","align","undefined","LabelCustom","label","IconWarning","Warning","Input","input","InputForm","register","mask","rest","handleKeyUp","e","currentTarget","maxLength","replace","cep","length","toFloat","toFixed","currency","match","cpf","cnpj","percent","slice","maxLengthInput","htmlFor","placeholder","disabled","id","onBlur","onChange","ref","onKeyUp","message","Panel","backgroundColor","margin","Row","RowPanel","CenterPanel","LeftPanel","RightPanel","ArrowDown","KeyboardArrowDown","WrappetSelect","Select","select","SelectForm","Text","span","notUpperCase","colorFont","QuoteService","GetAll","statusQuoteId","days","userId","GetById","WrapperPanel","h1","HandIcon","HandHoldingUsd","ArrowIcon","ArrowForwardIos","Quotes","quotes","setQuotes","hasResult","setHasResult","statusIndex","timeIndex","setActiveFilters","filterName","index","prevState","result","getQuotes","Id","map","quote","NumQuote","DtEmission","toDateBr","DtLimit","handleScrool","setTimeout","location","window","document","getElementById","offsetTop","scrollTo","top","behavior","QuoteItemsCsv","d","ItemId","ProductCode","Product","HasItem","UnitValue","IpiValue","IcmsValue","DeliveryTime","Observation","mocaSelectShipping","shippingTypeId","shippingType","mocaSelectPaymentConditions","paymentConditionsId","paymentCondition","mocaCompany","CompanyName","FantasyName","Cnpj","ZipCode","Address","Number","Complement","Neighborhood","State","City","mocaShippingAndPayment","QuoteId","ShippingTypeId","PaymentConditionsId","ShippingValue","mocaSupplier","companyName","fantasyName","address","neighborhood","state","city","zipCode","complement","number","QuoteDetailService","UpdateShippingAndPayment","item","Promise","resolve","GetShippingAndPaymentForm","quoteId","find","q","UpdateQuoteItem","quoteItem","GetQuoteItems","Title","Total","TablePrint","info","title","row","col","indexCol","toString","headerSupplierBuyer","headerQuote","headerQuoteItems","QuoteDetailPrint","supplier","shipping","payment","shippingPayment","infoSupplier","infoBuyer","infoQuote","infoQuoteItems","s","p","forEach","ReferenceCode","Amount","total","reduce","forwardRef","Form","form","WrapperInputs","QuotesItemsForm","quoteItemId","handlerCollapse","setQuoteItem","required","setRequired","useForm","handleSubmit","reset","formState","onSubmit","toFloatBr","quoteItemReset","newItem","newQuoteItem","newQuoteItems","handlerHasProduct","checked","noValidate","Unit","memo","TagIcon","Tag","arrowIconCSS","css","ArrowUpIcon","KeyboardArrowUp","ArrowDownIcon","QuotesItems","setQuoteItemId","handleCollapse","Math","min","itemId","product","parseValue","escaped","test","buildURI","obj","header","csv","h","csvRows","Object","keys","x","join","o","values","toCSV","csvEncoded","TextEncoder","encode","navigator","userAgent","blob","Blob","Uint8Array","dataURI","URL","webkitURL","createObjectURL","WrapperTop","ImportExportCss","Import","iconCSS","IconHand","Print","WrapperTitleQuotes","WrapperRadio","WrapperWarningRegister","QuotesDetail","useParams","selectShipping","setSelectShipping","selectPaymentConditions","setSelectPaymentConditions","setQuote","tableCsv","settableCsv","importType","setImportType","setSupplier","inputUpload","linkExportCSV","refQuoteDetailPrint","refRadio","getValues","objReactToPrint","content","current","handlerPrint","useReactToPrint","handleRadioImport","handlerExportCSV","newData","CodigoProduto","Disponivel","CodigoDeReferencia","Produto","ValorUnitario","ValorIPIPercentual","ValorICMSPercentual","PrazoEntregaDias","Observacao","URI","setAttribute","click","handlerSaveCSV","files","list","split","parsed","parse","toFile","getQuoteItems","getShippingAndPayment","getQuote","style","condition","target","href","display","rel","accept","SupplierService","RegisterSupplier","PrivateRoute","path","exact","Routes","show","keyframes","SpinnerIcon","Spinner","Loading","InfoProfile","IconAvatar","Profile","Email","imgProfileDefault","Nav","nav","WrapperLink","WrapperText","CompanyIcon","Building","QuotesIcon","AdminIcon","Cog","LogoutIcon","PowerOff","WrapperProfile","Menu","handleClickMenu","body","classList","toggle","activeClassName","IsAdm","Content","WrapperMenu","ButtonMenu","IconMenuOpened","SlidersH","IconMenuClosed","Close","Header","handleMenu","Main","basename","createGlobalStyle","App","GlobalStyles","String","prototype","toDate","date","this","parseInt","Date","parseFloat","replaceAll","substring","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2c29d83c.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_REST_API_BASE_NAME,\n  withCredentials: true,\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;\n","import { IResponseLogin, IUser } from '../Interfaces/User';\nimport api from './api';\n// import { mocaUser } from '../MoocasData/Profile';\n\nexport const ProfileService = {\n  LoginService: async (\n    googleId: string,\n    email: string,\n    setLoading: (value: boolean) => void\n  ) => {\n    try {\n      const {\n        data: { data, success, errors }\n      } = await api.post<IResponseLogin>('Auth', {\n        googleId,\n        email\n      });\n\n      if (success) {\n        api.defaults.headers.common.Authorization = `Bearer ${data.token}`;\n        return data.user;\n      }\n      throw errors;\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n\n    return null;\n  },\n  RefreshToken: async (setLoading: (value: boolean) => void) => {\n    try {\n      const {\n        data: { data, success, errors }\n      } = await api.get<IResponseLogin>('Auth/RefreshToken');\n\n      if (success) {\n        api.defaults.headers.common.Authorization = `Bearer ${data.token}`;\n        return data.user;\n      }\n      throw errors;\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n\n    return null;\n  }\n  // Get: (googleId: string) =>\n  //   new Promise<IUser>(resolve =>\n  //     setTimeout(() => {\n  //       const result = mocaUser.find(p => p.googleId === googleId);\n  //       resolve(result || ({} as IUser));\n  //     }, 2000)\n  //   ),\n\n  // insert: (item: IUser) =>\n  //   new Promise<string>(resolve => {\n  //     setTimeout(() => {\n  //       // update na base\n  //       resolve('done!');\n  //     }, 2000);\n  //   })\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { createContext, useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { ProfileService } from 'services/profileService';\nimport { IUser } from '../../Interfaces/User';\n\ninterface IMainContext {\n  menuOpen: boolean;\n  setMenuOpen: (value: boolean) => void;\n  loading: boolean;\n  setLoading: (value: boolean) => void;\n  profile: IUser | null;\n  setProfile: (value: IUser | null) => void;\n}\n\nconst MainContext = createContext<IMainContext>({} as IMainContext);\n\nexport const MainContextProvider: React.FC = ({ children }) => {\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [profile, setProfile] = useState<IUser | null>(null);\n\n  const handleSetLoading = useCallback((value: boolean) => {\n    setLoading(value);\n  }, []);\n\n  const handleSetMenuOpen = useCallback((value: boolean) => {\n    // localStorage.setItem('menu-open', JSON.stringify(value));\n    setMenuOpen(value);\n  }, []);\n\n  const handleSetProfile = useCallback((value: IUser | null) => {\n    setProfile(value);\n    // if (!value) localStorage.removeItem('profile');\n    // else localStorage.setItem('profile', JSON.stringify(value));\n  }, []);\n\n  useEffect(() => {\n    // const profileInStorage = localStorage.getItem('profile');\n    // if (profileInStorage) {\n    //   setProfile(JSON.parse(profileInStorage));\n    // } else {\n    //   setProfile(null);\n    // }\n    const refreshToken = async () => {\n      setLoading(true);\n      const resultProfile = await ProfileService.RefreshToken(setLoading);\n      setProfile(resultProfile);\n    };\n    refreshToken();\n  }, []);\n\n  return (\n    <MainContext.Provider\n      value={{\n        menuOpen,\n        setMenuOpen: handleSetMenuOpen,\n        loading,\n        setLoading: handleSetLoading,\n        profile,\n        setProfile: handleSetProfile\n      }}\n    >\n      {children}\n    </MainContext.Provider>\n  );\n};\n\nexport const useMainContext = () => React.useContext(MainContext);\n","import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { IQuoteItem } from '../../Interfaces/QuotesDetail';\n\ninterface IQuoteItemsContext {\n  quoteItemsContext: IQuoteItem[] | null;\n  setQuoteItemsContext: (items: IQuoteItem[] | null) => void;\n}\n\nconst ContextQuoteItems = createContext<IQuoteItemsContext>(\n  {} as IQuoteItemsContext\n);\n\nexport const ContextQuoteItemsProvider: React.FC = ({ children }) => {\n  const [quoteItems, setQuoteItems] = useState<IQuoteItem[] | null>([]);\n\n  const handleSetQuoteItems = useCallback((items: IQuoteItem[] | null) => {\n    setQuoteItems(items);\n  }, []);\n\n  return (\n    <ContextQuoteItems.Provider\n      value={{\n        quoteItemsContext: quoteItems,\n        setQuoteItemsContext: handleSetQuoteItems\n      }}\n    >\n      {children}\n    </ContextQuoteItems.Provider>\n  );\n};\n\nexport const useContextQuoteItems = () => useContext(ContextQuoteItems);\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div``;\r\n","import React from 'react';\r\n\r\nimport { Container } from './styles';\r\n\r\nconst Admin: React.FC = () => (\r\n  <Container>\r\n    <h1>Admin</h1>\r\n  </Container>\r\n);\r\n\r\nexport default Admin;\r\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  justify-content: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  width: 80%;\n  height: 50%;\n  @media (max-width: 500px) {\n    width: 100%;\n    padding: 30px 15px;\n    h1 {\n      font-size: 18px;\n    }\n  }\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  padding: 30px;\n  text-align: center;\n  background: var(--white);\n  border: 1px solid var(--primary);\n  button {\n    width: 70%;\n\n    @media (max-width: 500px) {\n      width: 100%;\n    }\n    justify-content: center;\n    border: 1px solid var(--primary) !important;\n  }\n  .unauthorized {\n    color: var(--error-alert);\n  }\n`;\n\nexport const LogoCompany = styled.img`\n  height: 75px;\n`;\n\nexport const WapperTop = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  h1 {\n    text-transform: none;\n    padding: 0;\n  }\n  margin-bottom: 25px;\n`;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport {\n  GoogleLogin,\n  GoogleLoginResponse,\n  GoogleLoginResponseOffline\n} from 'react-google-login';\n\nimport { useMainContext } from 'Context/Main';\n\nimport { isAuthenticated } from 'Auth';\nimport { IResponseLogin, IUser } from 'Interfaces/User';\nimport { ProfileService } from 'services/profileService';\nimport api from 'services/api';\nimport { Container, Wrapper, LogoCompany, WapperTop } from './styles';\n\nconst Login: React.FC = () => {\n  const { setProfile, profile, setLoading } = useMainContext();\n  const refSelect = useRef<HTMLSelectElement>(null);\n  const [unauthorized, setUnauthorized] = useState(false);\n  const history = useHistory();\n\n  const handleLoginSuccess = useCallback(\n    async (response: GoogleLoginResponse | GoogleLoginResponseOffline) => {\n      const {\n        googleId,\n        profileObj: { email, name, imageUrl }\n      } = response as GoogleLoginResponse;\n\n      setLoading(true);\n\n      const resultProfile = await ProfileService.LoginService(\n        googleId,\n        email,\n        setLoading\n      );\n\n      setLoading(false);\n\n      if (resultProfile === null) setUnauthorized(true);\n      else {\n        setProfile({ ...resultProfile, Name: name, ImageUrl: imageUrl });\n        history.push('/');\n      }\n    },\n    [history, setLoading, setProfile]\n  );\n\n  const handleLoginError = useCallback(() => {}, []);\n  const [company, setCompany] = useState('');\n\n  useEffect(() => {\n    // quando ja tiver um dominio, pegar o nome da empresa \"lakatos\" pelo subdominio\n    // const companyName = window.location.hostname.split(\".\")[0];\n    const companyName = 'lakatos';\n    setCompany(`/images/${companyName}.svg`);\n  }, [setProfile]);\n\n  if (profile) return <Redirect to=\"/\" />;\n\n  return (\n    <Container>\n      <Wrapper>\n        <WapperTop>\n          <h1>Painel do Fornecedor</h1>\n          <LogoCompany src={company} />\n        </WapperTop>\n        <GoogleLogin\n          clientId={`${process.env.REACT_APP_GOOGLE_AUTH_CLIENT_ID}`}\n          buttonText=\"Logar com Google\"\n          onSuccess={handleLoginSuccess}\n          onFailure={handleLoginError}\n          type=\"button\"\n        />\n\n        {unauthorized && (\n          <h2 className=\"unauthorized\"> Login não Autorizado</h2>\n        )}\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { useMainContext } from '../../Context/Main';\n\nconst Logout: React.FC = () => {\n  const { setProfile } = useMainContext();\n\n  useEffect(() => {\n    setProfile(null);\n  }, [setProfile]);\n\n  return <Redirect to=\"/login\" />;\n};\n\nexport default Logout;\n","import styled from 'styled-components';\n\nconst handleBackground = (secondary?: boolean, outlined?: boolean) => {\n  if (secondary) return 'var(--secondary)';\n  if (outlined) return 'transparent';\n  return 'var(--primary)';\n};\n\nconst handleBackgroundHover = (secondary?: boolean, outlined?: boolean) => {\n  if (secondary) return 'var(--secondary-dark-hover)';\n  if (outlined) return 'var(--primary)';\n  return 'var(--primary-dark-hover)';\n};\n\nexport const Button = styled.button<{\n  secondary?: boolean;\n  outlined?: boolean;\n  width?: string;\n}>`\n  @media (max-width: 450px) {\n    padding: 9px 6px;\n    font-size: 16px;\n  }\n\n  background: ${({ secondary, outlined }) =>\n    handleBackground(secondary, outlined)};\n\n  border: ${({ outlined }) => (outlined ? '2px solid var(--primary)' : 'none')};\n  color: ${({ outlined }) => (outlined ? 'var(--primary)' : 'var(--white)')};\n  padding: 6px;\n  border-radius: 4px;\n  font-weight: 500;\n  cursor: pointer;\n  outline: 0;\n  text-transform: uppercase;\n  box-sizing: border-box;\n  box-shadow: var(--shadow-default);\n  width: ${({ width }) => width || '100%'};\n\n  @media (max-width: 450px) {\n    width: 100%;\n  }\n  &:hover {\n    transition: all 0.3s;\n    color: var(--white);\n    background: ${({ secondary, outlined }) =>\n      handleBackgroundHover(secondary, outlined)};\n  }\n  &:disabled {\n    background-color: inherit;\n    color: inherit;\n    border-color: inherit;\n    cursor: initial;\n    opacity: 0.4;\n  }\n`;\n","import styled from 'styled-components';\n\ninterface PropsContainer {\n  colorIcon?: string;\n  backColor?: string;\n  textColor?: string;\n}\nexport const Container = styled.div<PropsContainer>`\n  display: flex;\n  min-width: 80px;\n  font-size: 10px;\n  padding: 6px 10px;\n  border-radius: 4px;\n  width: fit-content;\n  @media (max-width: 450px) {\n    flex-direction: column;\n    padding: 6px;\n    & ~ div {\n      margin-left: 5px;\n    }\n  }\n  background: ${({ backColor }) =>\n    backColor ? `var(--${backColor})` : 'var(--white)'};\n  box-shadow: var(--shadow-default);\n  align-items: center;\n  cursor: pointer;\n  svg {\n    width: 24px;\n    height: 24px;\n    flex-shrink: 0;\n    path {\n      color: ${({ colorIcon }) =>\n        colorIcon ? `var(--${colorIcon})` : 'initial'};\n    }\n  }\n  span {\n    margin-left: 5px;\n    color: ${({ textColor }) =>\n      textColor ? `var(--${textColor})` : 'var(--primary)'};\n  }\n  :hover {\n    transform: scale(1.05);\n    transition: scale 0.3s;\n  }\n`;\n","import React from 'react';\nimport { Container } from './styles';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  text: string;\n  colorIcon?: string;\n  backColor?: string;\n  textColor?: string;\n}\n\nexport const ButtonIcon: React.FC<Props> = ({\n  children,\n  text,\n  colorIcon,\n  backColor,\n  textColor,\n  className,\n  onClick\n}) => (\n  <Container\n    className={className}\n    colorIcon={colorIcon}\n    backColor={backColor}\n    textColor={textColor}\n    onClick={onClick}\n  >\n    {children}\n    <span>{text}</span>\n  </Container>\n);\n","import styled from 'styled-components';\n\nexport const Column = styled.div<{ width?: string; align?: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: ${({ align }) => align || 'unset'};\n  width: ${({ width }) => (width !== undefined ? width : '100%')};\n  margin-left: 5px;\n  max-width: ${({ width }) => (width !== undefined ? width : '100%')};\n  //overflow: hidden;\n  @media (max-width: 450px) {\n    margin: 5px 0;\n    width: 100%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LabelCustom = styled.label`\n  text-transform: uppercase;\n  color: var(--color-label);\n`;\n","import styled from 'styled-components';\nimport { Warning } from '../../styles/Icons';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n\n  &.invalid {\n    span {\n      color: var(--error-alert);\n      font-size: 10px;\n      display: flex;\n      align-items: center;\n    }\n    input {\n      border-color: var(--error-alert);\n    }\n    svg {\n      display: block;\n    }\n  }\n\n  .react-switch-checkbox {\n    height: 0;\n    width: 0;\n    visibility: hidden;\n  }\n\n  .react-switch-label {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    cursor: pointer;\n    width: 40px;\n    height: 22px;\n    background: grey;\n    border-radius: 100px;\n    position: relative;\n    transition: background-color 0.2s;\n  }\n\n  .react-switch-label {\n    .react-switch-button {\n      content: '';\n      position: absolute;\n      top: 1px;\n      left: 2px;\n      width: 20px;\n      height: 20px;\n      border-radius: 45px;\n      transition: 0.2s;\n      background: #fff;\n      box-shadow: 0 0 2px 0 rgba(10, 10, 10, 0.29);\n    }\n  }\n\n  .react-switch-checkbox:checked {\n    + .react-switch-label .react-switch-button {\n      left: calc(100% - 2px);\n      transform: translateX(-100%);\n    }\n    + .react-switch-label {\n      background: var(--switch-active);\n    }\n  }\n\n  .react-switch-label:active .react-switch-button {\n    width: 30px;\n  }\n`;\n\nexport const IconWarning = styled(Warning)`\n  display: none;\n  width: 10px;\n  height: 10px;\n  flex-shrink: 0;\n  margin-right: 5px;\n  path {\n    color: var(--error-alert);\n  }\n`;\n\nexport const Input = styled.input`\n  border: 1px solid var(--border-select-input);\n  border-radius: 4px;\n  margin-top: 5px;\n  width: ${({ type }) => (type === 'checkbox' ? 'auto' : '100%')};\n  box-sizing: border-box;\n  ::placeholder {\n    color: var(--placeholder-color);\n    text-transform: uppercase;\n    font-size: 10px;\n  }\n  ::-webkit-inner-spin-button {\n    display: none;\n  }\n  &:disabled {\n    background-color: inherit;\n    color: inherit;\n    border-color: inherit;\n    cursor: initial;\n    opacity: 0.4;\n  }\n  &:focus {\n    transition: all 0.3s;\n    border-color: var(--primary);\n  }\n`;\n","import React, { InputHTMLAttributes, useCallback } from 'react';\nimport { UseFormRegisterReturn } from 'react-hook-form';\nimport {\n  cep,\n  cpf,\n  currency,\n  cnpj,\n  maxLengthInput,\n  percent\n} from '../../utils/masks';\nimport { LabelCustom } from '../LabelCustom';\nimport { Container, IconWarning, Input } from './styles';\n\ninterface IProps extends InputHTMLAttributes<HTMLInputElement> {\n  register: UseFormRegisterReturn;\n  errors?: any;\n  label?: string;\n  mask?: 'cep' | 'currency' | 'cpf' | 'cnpj' | 'percent';\n}\n\nexport const InputForm: React.FC<IProps> = ({\n  register,\n  errors,\n  label,\n  mask,\n  ...rest\n}) => {\n  const handleKeyUp = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (mask === 'cep') {\n        cep(e);\n      }\n      if (mask === 'currency') {\n        currency(e);\n      }\n      if (mask === 'cpf') {\n        cpf(e);\n      }\n\n      if (mask === 'cnpj') {\n        cnpj(e);\n      }\n\n      if (mask === 'percent') {\n        percent(e);\n      }\n\n      if (rest.maxLength) {\n        maxLengthInput(e);\n      }\n    },\n    [mask, rest.maxLength]\n  );\n\n  const a = { ...{ errors, label } };\n  return (\n    <Container\n      className={`${rest.className} ${\n        errors && errors[register.name] ? 'invalid' : ''\n      }`}\n    >\n      <LabelCustom htmlFor={register?.name}>{label}</LabelCustom>\n\n      <Input\n        placeholder={rest.placeholder}\n        type={rest.type}\n        onClick={rest.onClick}\n        disabled={rest.disabled}\n        name={register?.name}\n        id={register?.name}\n        onBlur={register?.onBlur}\n        onChange={register?.onChange}\n        ref={register?.ref}\n        onKeyUp={handleKeyUp}\n        className={rest.type === 'checkbox' ? 'react-switch-checkbox' : ''}\n        maxLength={rest.maxLength}\n      />\n\n      {rest.type && rest.type === 'checkbox' && (\n        <label htmlFor={register?.name} className=\"react-switch-label\">\n          <span className=\"react-switch-button\" />\n        </label>\n      )}\n\n      <span>\n        <IconWarning />\n        {errors && errors[register.name]?.message}\n      </span>\n    </Container>\n  );\n};\n","import React from 'react';\n\nexport function cep(e: React.FormEvent<HTMLInputElement>) {\n  e.currentTarget.maxLength = 9;\n  let { value } = e.currentTarget;\n  value = value.replace(/\\D/g, '');\n  value = value.replace(/^(\\d{5})(\\d)/, '$1-$2');\n  e.currentTarget.value = value;\n  return e;\n}\n\nexport function currency(e: React.FormEvent<HTMLInputElement>) {\n  let { value } = e.currentTarget;\n  value = value.replace(/\\D/g, '');\n  if (!value.length) {\n    e.currentTarget.value = value;\n    return e;\n  }\n  value = `${(value.toFloat() / 100).toFixed(2)}`;\n  value = value.replace('.', ',');\n  value = value.replace(/(\\d)(\\d{2})$/, '$1,$2');\n  value = value.replace(/(?=(\\d{3})+(\\D))\\B/g, '.');\n  e.currentTarget.value = value;\n  return e;\n}\n\nexport function percent(e: React.FormEvent<HTMLInputElement>) {\n  e.currentTarget.maxLength = 6;\n  let { value } = e.currentTarget;\n  value = value.replace(/\\D/g, '');\n  if (value.length > 6) return e;\n  if (!value.length) {\n    e.currentTarget.value = value;\n    return e;\n  }\n  value = `${(value.toFloat() / 100).toFixed(2)}`;\n  value = value.replace('.', ',');\n  value = value.replace(/(\\d)(\\d{2})$/, '$1,$2');\n  if (value.toFloat() > 100) value = '100,00';\n  e.currentTarget.value = value;\n  return e;\n}\n\nexport function cpf(e: React.FormEvent<HTMLInputElement>) {\n  e.currentTarget.maxLength = 14;\n  let { value } = e.currentTarget;\n  if (!value.match(/^(\\d{3}).(\\d{3}).(\\d{3})-(\\d{2})$/)) {\n    value = value.replace(/\\D/g, '');\n    value = value.replace(/(\\d{3})(\\d)/, '$1.$2');\n    value = value.replace(/(\\d{3})(\\d)/, '$1.$2');\n    value = value.replace(/(\\d{3})(\\d{2})$/, '$1-$2');\n    e.currentTarget.value = value;\n  }\n  return e;\n}\n\nexport function cnpj(e: React.FormEvent<HTMLInputElement>) {\n  e.currentTarget.maxLength = 18;\n  let { value } = e.currentTarget;\n  if (!value.match(/^(\\d{2}).(\\d{3}).(\\d{3})\\/(\\d{4})-(\\d{2})$/)) {\n    value = value.replace(/\\D/g, '');\n    value = value.replace(/(\\d{2})(\\d)/, '$1.$2');\n    value = value.replace(/(\\d{3})(\\d)/, '$1.$2');\n    value = value.replace(/(\\d{3})(\\d)/, '$1/$2');\n    value = value.replace(/(\\d{4})(\\d{2})$/, '$1-$2');\n    e.currentTarget.value = value;\n  }\n  return e;\n}\n\nexport function maxLengthInput(e: React.FormEvent<HTMLInputElement>) {\n  const { maxLength, value } = e.currentTarget;\n  if (value.length > maxLength)\n    e.currentTarget.value = value.slice(0, maxLength);\n  return e;\n}\n","import styled from 'styled-components';\n\nexport const Panel = styled.div<{\n  backgroundColor?: string;\n  margin?: string;\n}>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: ${({ backgroundColor }) =>\n    backgroundColor ? `var(--${backgroundColor})` : 'var(--white)'};\n  width: 100%;\n  border-radius: 8px;\n  box-shadow: var(--shadow-default);\n  box-sizing: border-box;\n  padding: 20px 5%;\n  margin: ${({ margin }) => margin || '0'};\n  @media (min-width: 500px) {\n    padding: 20px 20%;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Row = styled.div<{ align?: string }>`\n  display: flex;\n  justify-content: ${({ align }) => align || 'initial'};\n  @media (max-width: 450px) {\n    flex-direction: column;\n    margin: 0;\n  }\n  margin: 5px 0;\n  width: 100%;\n`;\n","import styled from 'styled-components';\n\nexport const RowPanel = styled.div`\n  display: flex;\n  background-color: var(--white);\n  border-radius: 8px;\n  max-width: 100vw;\n  min-height: 110px;\n  width: 100%;\n  box-shadow: var(--shadow-default);\n  margin-bottom: 15px;\n  align-items: center;\n  box-sizing: border-box;\n\n  :hover {\n    transform: scale(1.015);\n    transition: scale 0.3s;\n  }\n`;\n","import styled from 'styled-components';\r\n\r\nexport const CenterPanel = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n  border-right: 1px solid var(--color-borders);\r\n  border-left: 1px solid var(--color-borders);\r\n  padding: 20px 10px;\r\n  box-sizing: border-box;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const LeftPanel = styled.div`\r\n  padding: 0 10px;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const RightPanel = styled.div`\r\n  padding: 0 10px;\r\n`;\r\n","import styled from 'styled-components';\nimport { Warning, KeyboardArrowDown } from '../../styles/Icons';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n\n  &.invalid {\n    span {\n      color: var(--error-alert);\n      font-size: 10px;\n      display: flex;\n      align-items: center;\n    }\n    select {\n      border-color: var(--error-alert);\n    }\n    svg {\n      display: block;\n    }\n  }\n`;\n\nexport const ArrowDown = styled(KeyboardArrowDown)`\n  width: 25px;\n  height: 25px;\n`;\n\nexport const WrappetSelect = styled.div`\n  display: flex;\n  position: relative;\n  align-items: center;\n  span {\n    position: absolute;\n    z-index: 0;\n    right: 5px;\n  }\n`;\n\nexport const Select = styled.select`\n  z-index: 1;\n  border: 1px solid var(--border-select-input);\n  border-radius: 4px;\n  margin-top: 5px;\n  width: 100%;\n  appearance: none;\n  &:focus {\n    transition: all 0.3s;\n    border-color: var(--primary);\n  }\n`;\n\nexport const IconWarning = styled(Warning)`\n  display: none;\n  width: 10px;\n  height: 10px;\n  flex-shrink: 0;\n  margin-right: 5px;\n  path {\n    color: var(--error-alert);\n  }\n`;\n","import React from 'react';\r\nimport { UseFormRegisterReturn } from 'react-hook-form';\r\nimport { LabelCustom } from '../LabelCustom';\r\nimport {\r\n  Container,\r\n  IconWarning,\r\n  Select,\r\n  ArrowDown,\r\n  WrappetSelect\r\n} from './style';\r\nimport { KeyboardArrowDown } from '../../styles/Icons';\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  register: UseFormRegisterReturn;\r\n  errors?: any;\r\n  label?: string;\r\n  value?: string | number;\r\n}\r\n\r\nexport const SelectForm: React.FC<IProps> = ({\r\n  children,\r\n  className,\r\n  register,\r\n  errors,\r\n  label,\r\n  value\r\n}) => (\r\n  <Container\r\n    className={`${className} ${\r\n      errors && errors[register.name] ? 'invalid' : ''\r\n    }`}\r\n  >\r\n    <LabelCustom htmlFor={register?.name}>{label}</LabelCustom>\r\n    <WrappetSelect>\r\n      <Select\r\n        // value={value || ''}\r\n        name={register?.name}\r\n        id={register?.name}\r\n        onBlur={register?.onBlur}\r\n        onChange={register?.onChange}\r\n        ref={register?.ref}\r\n      >\r\n        {children}\r\n      </Select>\r\n      <span>\r\n        <ArrowDown />\r\n      </span>\r\n    </WrappetSelect>\r\n    <span>\r\n      <IconWarning />\r\n      {errors && errors[register.name]?.message}\r\n    </span>\r\n  </Container>\r\n);\r\n","import styled from 'styled-components';\n\nexport const Text = styled.span<{\n  colorFont?: string;\n  notUpperCase?: boolean;\n}>`\n  text-transform: ${({ notUpperCase }) =>\n    notUpperCase ? 'none' : 'uppercase'};\n\n  color: ${({ colorFont }) =>\n    colorFont ? `var(--${colorFont})` : 'var(--color-text)'};\n  width: 100%;\n  max-width: 100%;\n  word-wrap: break-word;\n\n  &.color0 {\n    color: var(--status-open);\n  }\n  &.color1 {\n    color: var(--status-finalize);\n  }\n  &.color2 {\n    color: var(--status-expired);\n  }\n\n  small {\n    color: var(--color-small);\n  }\n`;\n","import { IQuote } from '../Interfaces/Quotes';\nimport { mocaQuotes } from '../MoocasData/Quotes';\nimport api from './api';\n\ninterface Param {\n  id?: string;\n  userId?: string;\n  days?: number;\n  statusQuoteId?: string;\n  setLoading: (value: boolean) => void;\n}\n\ninterface Data {\n  quotes: IQuote[];\n}\n\nexport interface IResponseQuotes {\n  data: IQuote[];\n  success: boolean;\n  errors: any;\n}\n\nexport interface IResponseQuote {\n  data: IQuote;\n  success: boolean;\n  errors: any;\n}\n\nexport const QuoteService = {\n  GetAll: async ({\n    statusQuoteId = '0',\n    days = 0,\n    id,\n    userId,\n    setLoading\n  }: Param) => {\n    try {\n      const {\n        data: { data, success, errors }\n      } = await api.get<IResponseQuotes>(`Quote/GetAllByUser/${userId}`);\n\n      if (success) return data;\n      throw errors;\n    } catch (error) {\n      setLoading(false);\n      console.log('error', error);\n    }\n    return null;\n  },\n  GetById: async (id: string, setLoading: (value: boolean) => void) => {\n    try {\n      const {\n        data: { data, success, errors }\n      } = await api.get<IResponseQuote>(`Quote/Get/${id}`);\n\n      if (success) return data;\n      throw errors;\n    } catch (error) {\n      setLoading(false);\n      console.log('error', error);\n    }\n    return null;\n  }\n};\n","import styled from 'styled-components';\nimport { ArrowForwardIos, HandHoldingUsd } from '../../styles/Icons';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 100vw;\n  @media (min-width: 500px) {\n    max-width: 680px;\n  }\n\n  a {\n    width: 100%;\n    text-decoration: none;\n  }\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  color: var(--blue-light);\n  margin-top: 15px;\n`;\n\nexport const WrapperFilters = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  @media (min-width: 500px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  width: 100%;\n  @media (min-width: 500px) {\n    width: 70%;\n    & + div {\n      margin-top: 5px;\n    }\n  }\n`;\n\nexport const ButtonFilter = styled.button`\n  cursor: pointer;\n  width: 100%;\n  height: 26px;\n  margin: 5px 5px;\n  background-color: var(--grey-filters);\n  color: var(--filter-text);\n  border-radius: 12px;\n  font-weight: 400;\n  box-shadow: var(--shadow-default);\n  :hover {\n    transform: scale(1.015);\n    transition: scale 0.3s;\n    font-weight: 500;\n  }\n  &.active {\n    background-color: var(--blue-light);\n    color: var(--white);\n    :hover {\n      transform: scale(1.015);\n      transition: scale 0.3s;\n      font-weight: 500;\n    }\n  }\n  @media (min-width: 500px) {\n    width: 20%;\n  }\n`;\n\nexport const WrapperPanel = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin: 15px 0;\n  width: 100%;\n  max-width: 100vw;\n  a {\n    cursor: pointer;\n  }\n`;\n\nexport const HandIcon = styled(HandHoldingUsd)`\n  width: 24px;\n  height: 24px;\n`;\n\nexport const ArrowIcon = styled(ArrowForwardIos)`\n  width: 24px;\n  height: 24px;\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  CenterPanel,\n  Column,\n  LabelCustom,\n  LeftPanel,\n  Panel,\n  RightPanel,\n  Row,\n  RowPanel,\n  Text\n} from '../../components';\nimport { useMainContext } from '../../Context/Main';\nimport { IActiveFilters, IQuote } from '../../Interfaces/Quotes';\nimport { QuoteService } from '../../services/quoteService';\nimport {\n  ArrowIcon,\n  ButtonFilter,\n  Container,\n  Filters,\n  HandIcon,\n  WrapperFilters,\n  WrapperPanel\n} from './styles';\n\nconst filterIntial = {\n  status: ['Aberto', 'Vencido', 'Finalizado', 'Todos'],\n  time: ['Última', '30 dias', '60 dias', '> 90 dias']\n};\n\nconst Quotes: React.FC = () => {\n  const [quotes, setQuotes] = useState<IQuote[] | null>();\n  const [hasResult, setHasResult] = useState<boolean>(false);\n\n  const [activeFilters, setActiveFilters] = useState<IActiveFilters>({\n    statusIndex: 0,\n    timeIndex: 0\n  });\n\n  const { setLoading, profile } = useMainContext();\n\n  const handlerBtnFilter = useCallback((filterName: string, index: number) => {\n    setActiveFilters(prevState => ({ ...prevState, [filterName]: index }));\n  }, []);\n\n  useEffect(() => {\n    const getQuotes = async (userId: string) => {\n      try {\n        setLoading(true);\n        const result = await QuoteService.GetAll({\n          userId,\n          setLoading\n        });\n        setLoading(false);\n        setQuotes(result);\n        setHasResult(!result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (profile) getQuotes(profile.Id);\n  }, [profile, setLoading]);\n\n  return (\n    <Container>\n      <h1>Cotações</h1>\n\n      {/* <WrapperFilters>\n        <Filters>\n          {filterIntial.time.map((text, index) => (\n            <ButtonFilter\n              key={text}\n              className={index === activeFilters.timeIndex ? 'active' : ''}\n              onClick={() => {\n                handlerBtnFilter('timeIndex', index);\n              }}\n            >\n              {text}\n            </ButtonFilter>\n          ))}\n        </Filters>\n        <Filters>\n          {filterIntial.status.map((text, index) => (\n            <ButtonFilter\n              key={text}\n              className={index === activeFilters.statusIndex ? 'active' : ''}\n              onClick={() => {\n                handlerBtnFilter('statusIndex', index);\n              }}\n            >\n              {text}\n            </ButtonFilter>\n          ))}\n        </Filters>\n      </WrapperFilters> */}\n\n      <WrapperPanel>\n        {hasResult && (\n          <>\n            <Panel backgroundColor=\"panel-warning\">\n              Não foi possível encontrar as Cotação\n            </Panel>\n            <br />\n          </>\n        )}\n        {quotes &&\n          quotes?.map(quote => (\n            <Link key={quote.Id} to={`/quotesDetail/${quote.Id}`}>\n              <RowPanel>\n                <LeftPanel>\n                  <HandIcon />\n                </LeftPanel>\n                <CenterPanel>\n                  <Row>\n                    <Column>\n                      <LabelCustom>cód</LabelCustom>\n                      <Text>{quote.NumQuote}</Text>\n                    </Column>\n                    {/* <Column>\n                      <LabelCustom>status</LabelCustom>\n                      <Text className={`color${quote.statusQuoteId}`}>\n                        {quote.statusDescription}\n                      </Text>\n                    </Column> */}\n                  </Row>\n                  <Row>\n                    <Column>\n                      <LabelCustom>Dt. Emissão</LabelCustom>\n                      <Text>{quote.DtEmission.toDateBr()}</Text>\n                    </Column>\n                    <Column>\n                      <LabelCustom>Dt. Limite</LabelCustom>\n                      <Text>{quote.DtLimit.toDateBr()}</Text>\n                    </Column>\n                  </Row>\n                </CenterPanel>\n                <RightPanel>\n                  <ArrowIcon />\n                </RightPanel>\n              </RowPanel>\n            </Link>\n          ))}\n      </WrapperPanel>\n    </Container>\n  );\n};\n\nexport default Quotes;\n","export const handleScrool = (id: string) => {\n  setTimeout(() => {\n    const location = window.document.getElementById(id)?.offsetTop;\n    if (location)\n      window.document\n        .getElementById('root')\n        ?.scrollTo({ top: location, behavior: 'auto' });\n  }, 10);\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background: var(--white);\n  margin: 25px 0;\n  display: flex;\n  width: 100%;\n  overflow: auto;\n  padding: 35px;\n  box-sizing: border-box;\n  max-height: 500px;\n\n  table {\n    width: 100%;\n    max-width: 100%;\n    text-indent: initial;\n    border-spacing: 2px;\n    background-color: transparent;\n    border-collapse: collapse;\n    box-sizing: border-box;\n    display: table;\n    thead,\n    tbody {\n      tr {\n        box-sizing: border-box;\n        display: table-row;\n        border-bottom: 2px solid var(--color-borders);\n        td,\n        th {\n          box-sizing: border-box;\n          display: table-cell;\n          text-align: center;\n          font-size: 10px;\n          word-break: break-all;\n          padding: 10px;\n          vertical-align: top;\n        }\n      }\n    }\n    tbody {\n      tr:nth-child(odd) {\n        background: var(--color-borders);\n      }\n    }\n    thead {\n      tr {\n        border-top: 3px solid var(--color-borders);\n        border-bottom: 3px solid var(--color-borders);\n        th {\n          font-size: 11px;\n          font-weight: 800;\n          word-break: normal;\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { IQuoteItem } from '../../Interfaces/QuotesDetail';\nimport { Container } from './styles';\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  data: IQuoteItem[];\n}\nconst QuoteItemsCsv: React.FC<Props> = ({ data, ...rest }) => {\n  if (data.length === 0) return <></>;\n  return (\n    <Container {...{ rest }}>\n      <table>\n        <thead>\n          <tr>\n            <th>Item Id</th>\n            <th>Código Produto</th>\n            <th>Produto</th>\n            <th>Possui Produto</th>\n            <th>Valor Unitário</th>\n            <th>Aliq. IPI(%)</th>\n            <th>Aliq. ICMS(%)</th>\n            <th>Prazo Entrega(Dias)</th>\n            <th>Observação</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map(d => (\n            <tr key={d.ItemId}>\n              <td>{d.ItemId}</td>\n              <td>{d.ProductCode}</td>\n              <td>{d.Product}</td>\n              <td>{d.HasItem ? 'sim' : 'não'}</td>\n              <td>{d.UnitValue}</td>\n              <td>{d.IpiValue}</td>\n              <td>{d.IcmsValue}</td>\n              <td>{d.DeliveryTime}</td>\n              <td>{d.Observation}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </Container>\n  );\n};\n\nexport default QuoteItemsCsv;\n","import { IQuoteItem } from '../../Interfaces/QuotesDetail';\nimport { IShippingPayment } from '../../Interfaces/ShippingPayment';\nimport { ICompany } from '../../Interfaces/Company';\nimport { ISupplier } from '../../Interfaces/Supplier';\n\nexport const mocaQuotesItems: IQuoteItem[] = [\n  {\n    Id: '1',\n    QuoteId: '000134',\n    ItemId: '0001',\n    ProductCode: '123',\n    Unit: 'peça',\n    Amount: 10,\n    Product: 'placa teste 1',\n    ReferenceCode: '',\n    UnitValue: '0',\n    IpiValue: '0',\n    IcmsValue: '0',\n    DeliveryTime: 0,\n    Observation: '',\n    HasItem: true,\n    Total: ''\n  },\n  {\n    Id: '2',\n    QuoteId: '000134',\n    ItemId: '0002',\n    ProductCode: '456',\n    Unit: 'peça',\n    Amount: 5,\n    Product: 'placa teste 2',\n    ReferenceCode: '',\n    UnitValue: '0',\n    IpiValue: '0',\n    IcmsValue: '0',\n    DeliveryTime: 0,\n    Observation: 'asdasdasd',\n    HasItem: true,\n    Total: ''\n  }\n];\n\nexport const mocaSelectShipping = [\n  { shippingTypeId: '0001', shippingType: 'tipo 1' },\n  { shippingTypeId: '0002', shippingType: 'tipo 2' }\n];\n\nexport const mocaSelectPaymentConditions = [\n  { paymentConditionsId: '0001', paymentCondition: 'à vista' },\n  { paymentConditionsId: '0002', paymentCondition: '30 dias' },\n  { paymentConditionsId: '0003', paymentCondition: '60 dias' }\n];\n\nexport const mocaCompany: ICompany = {\n  Id: '12345',\n  CompanyName: 'Lakatos sa',\n  FantasyName: 'Lakatos',\n  Cnpj: '11.111.111/0001-11',\n  ZipCode: '12345-00',\n  Address: 'avenida teste',\n  Number: '12345',\n  Complement: 'torre 3',\n  Neighborhood: 'Vila Teste',\n  State: 'SP',\n  City: 'São Paulo'\n};\n\nexport const mocaShippingAndPayment: IShippingPayment[] = [\n  {\n    QuoteId: '000134',\n    ShippingTypeId: '0001',\n    PaymentConditionsId: '0001',\n    ShippingValue: 10\n  }\n];\n\nexport const mocaSupplier: ISupplier = {\n  companyName: 'Fornecedor Teste XPTO LTDA',\n  fantasyName: 'Fornecedor Teste',\n  cnpj: '78.422.621/0001-50',\n  address: 'Rua teste',\n  neighborhood: 'Centro',\n  state: 'SP',\n  city: 'São Paulo',\n  zipCode: '05409-002',\n  complement: '',\n  number: '1234'\n};\n","import { IQuoteItem } from '../Interfaces/QuotesDetail';\nimport { IShippingPayment } from '../Interfaces/ShippingPayment';\nimport {\n  mocaShippingAndPayment,\n  mocaQuotesItems\n} from '../MoocasData/QuotesDetail';\nimport api from './api';\n\nexport interface IResponseLogin {\n  data: IQuoteItem[];\n  success: boolean;\n  errors: any;\n}\n\nexport const QuoteDetailService = {\n  UpdateShippingAndPayment: (item: IShippingPayment) =>\n    new Promise<string>(resolve => {\n      setTimeout(() => {\n        // update na base\n        resolve('done!');\n      }, 2000);\n    }),\n\n  GetShippingAndPaymentForm: (quoteId: String) =>\n    new Promise<IShippingPayment>(resolve =>\n      setTimeout(() => {\n        const result = mocaShippingAndPayment.find(q => q.QuoteId === quoteId);\n        resolve(result || ({} as IShippingPayment));\n      }, 2000)\n    ),\n\n  UpdateQuoteItem: (quoteItem: IQuoteItem) =>\n    new Promise<string>(resolve => {\n      setTimeout(() => {\n        // update na base\n        resolve('done!');\n      }, 2000);\n    }),\n\n  GetQuoteItems: async (\n    quoteId: String,\n    setLoading: (value: boolean) => void\n  ) => {\n    try {\n      const {\n        data: { data, success, errors }\n      } = await api.get<IResponseLogin>(`QuoteItem/${quoteId}`);\n      if (success) return data;\n      throw errors;\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n    return null;\n  }\n\n  // new Promise<IQuoteItem[]>(resolve =>\n  //   setTimeout(() => {\n  //     const result = mocaQuotesItems.filter(q => q.QuoteId === quoteId);\n  //     resolve(result?.length ? result : []);\n  //   }, 2000)\n  // )\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: none !important;\n  background-color: #ffffff !important;\n  padding: 30px;\n  width: auto;\n\n  @media print {\n    display: block !important;\n    .pagebreak {\n      page-break-before: always;\n    }\n    @page {\n      size: unset;\n    }\n  }\n  * {\n    color: #444444;\n    font-family: Arial, sans-serif !important;\n  }\n\n  h2 {\n    padding: 0;\n  }\n\n  table {\n    width: 100%;\n    align-items: center;\n    border: 1px solid #cccccc;\n    border-collapse: collapse;\n    margin-bottom: 15px;\n    border-spacing: 0px;\n    td {\n      font-size: 10px !important;\n      padding: 5px 0;\n      text-align: center;\n      width: 110px;\n      word-break: break-all;\n    }\n\n    > tbody tr:nth-child(1) {\n      background: #fafafa;\n      border-bottom: 0.1px solid black;\n      font-weight: bold;\n      margin: 0;\n\n      > td {\n        font-size: 14px !important;\n        font-family: Arial, sans-serif !important;\n        word-break: unset;\n      }\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n  font-size: 25px !important;\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  justify-content: space-between;\n  span {\n    font-size: 16px !important;\n  }\n`;\n","import React from 'react';\n\nimport { Container, Title, Total } from './styles';\nimport {\n  IPaymentConditionsSelect,\n  IQuoteItem,\n  IShippingTypeSelect\n} from '../../Interfaces/QuotesDetail';\n\nimport { IShippingPayment } from '../../Interfaces/ShippingPayment';\n\nimport { ISupplier } from '../../Interfaces/Supplier';\nimport { ICompany } from '../../Interfaces/Company';\nimport { IQuote } from '../../Interfaces/Quotes';\n\nconst TablePrint: React.FC<{\n  info: string[][];\n  title: string;\n}> = ({ info, title }) => (\n  <>\n    <h2>{title}</h2>\n    <table>\n      <tbody>\n        {info.map((row, index) => (\n          <tr key={index.toString()}>\n            {row.map((col, indexCol) => (\n              <td key={indexCol.toString()}> {col}</td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </>\n);\n\ninterface Props extends React.HTMLAttributes<HTMLDivElement> {\n  quoteItems: IQuoteItem[] | null;\n  supplier: ISupplier;\n  company: ICompany;\n  quote: IQuote | null;\n  shipping: IShippingTypeSelect[];\n  payment: IPaymentConditionsSelect[];\n  shippingPayment: IShippingPayment;\n}\n\nconst headerSupplierBuyer = [\n  'Razão Social',\n  'Nome Fantasia',\n  'CNPJ',\n  'Endereço',\n  'Bairro',\n  'Cidade',\n  'Estado',\n  'CEP'\n];\n\nconst headerQuote = [\n  'Tipo Frete',\n  'Valor Frete',\n  'Data Emissão',\n  'Data Limite',\n  'Condição de Pagamento'\n];\n\nconst headerQuoteItems = [\n  'Item',\n  'Código',\n  'Descrição',\n  'Código Ref.',\n  'Qtd.',\n  'Valor Unit.',\n  'Total',\n  'Aliq. IPI%',\n  'Aliq. ICMS%',\n  'Observação'\n];\n\nconst QuoteDetailPrint: React.ForwardRefRenderFunction<\n  HTMLDivElement,\n  Props\n> = (\n  { quoteItems, supplier, company, quote, shipping, payment, shippingPayment },\n  ref\n) => {\n  const infoSupplier: string[][] = [[...headerSupplierBuyer]];\n  const infoBuyer: string[][] = [[...headerSupplierBuyer]];\n  const infoQuote: string[][] = [[...headerQuote]];\n  const infoQuoteItems: string[][] = [[...headerQuoteItems]];\n\n  infoSupplier.push([\n    ...[\n      supplier.companyName,\n      supplier.fantasyName,\n      supplier.cnpj,\n      supplier.address,\n      supplier.neighborhood,\n      supplier.city,\n      supplier.state,\n      supplier.zipCode\n    ]\n  ]);\n\n  infoBuyer.push([\n    ...[\n      company.CompanyName,\n      company.FantasyName,\n      company.Cnpj,\n      company.Address,\n      company.Neighborhood,\n      company.City,\n      company.State,\n      company.ZipCode\n    ]\n  ]);\n  const { ShippingTypeId } = shippingPayment;\n  const shippingType =\n    shipping.find(s => s.shippingTypeId === ShippingTypeId)?.shippingType || '';\n\n  const paymentCondition =\n    payment.find(\n      p => p.paymentConditionsId === shippingPayment.PaymentConditionsId\n    )?.paymentCondition || '';\n\n  infoQuote.push([\n    ...[\n      shippingType,\n      shippingPayment?.ShippingValue?.toString(),\n      quote?.DtEmission.toDateBr() || '',\n      quote?.DtLimit.toDateBr() || '',\n      paymentCondition\n    ]\n  ]);\n\n  quoteItems?.forEach(q =>\n    infoQuoteItems.push([\n      ...[\n        q.ItemId,\n        q.ProductCode,\n        q.Product,\n        q.ReferenceCode,\n        q.Amount.toString(),\n        q.UnitValue,\n        q.Total,\n        `${q.IpiValue}%`,\n        `${q.IcmsValue}%`,\n        q.Observation\n      ]\n    ])\n  );\n\n  const total = quoteItems?.reduce(\n    (s, q, result) => (q?.Total?.toString().toFloat() || 0) + s,\n    0\n  );\n\n  return (\n    <Container ref={ref}>\n      <Title>Cotação - {quoteItems?.length && quoteItems[0].QuoteId}</Title>\n      <TablePrint title=\"Fornecedor\" info={infoSupplier} />\n      <TablePrint title=\"Comprador\" info={infoBuyer} />\n      <TablePrint title=\"Cotação\" info={infoQuote} />\n      <TablePrint title=\"Itens da Cotação\" info={infoQuoteItems} />\n      <Total>\n        <span>Total</span> <span>R$ {total}</span>\n      </Total>\n    </Container>\n  );\n};\n\nexport default React.forwardRef(QuoteDetailPrint);\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  //display: none;\r\n  transform: translateY(0%);\r\n  transition: transform 1s;\r\n\r\n  &.hide {\r\n    transform: translateY(-2%);\r\n\r\n    * {\r\n      height: 0;\r\n      padding: 0;\r\n      margin: 0;\r\n      font-size: 0;\r\n      border: 0;\r\n    }\r\n  }\r\n`;\r\nexport const Form = styled.form`\r\n  width: 100%;\r\n`;\r\n\r\nexport const WrapperInputs = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 30px;\r\n`;\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { QuoteDetailService } from '../../services/quoteDetailService';\nimport { Button, Column, InputForm, LabelCustom, Panel, Row } from '..';\nimport { useMainContext } from '../../Context/Main';\nimport { useContextQuoteItems } from '../../Context/QuoteItems';\nimport { IQuoteItem, IQuotesItemForm } from '../../Interfaces/QuotesDetail';\nimport { IPropsQuotesItemsForm } from '../../Interfaces/QuotesItemsForm';\nimport { Text } from '../Text';\nimport { Container, Form, WrapperInputs } from './styles';\n\nconst QuotesItemsForm: React.FC<IPropsQuotesItemsForm> = ({\n  quoteItemId,\n  handlerCollapse\n}) => {\n  const { setLoading } = useMainContext();\n  const [quoteItem, setQuoteItem] = useState<IQuoteItem>();\n  const [required, setRequired] = useState<boolean>(true);\n  const { quoteItemsContext, setQuoteItemsContext } = useContextQuoteItems();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm<IQuotesItemForm>();\n\n  const onSubmit: SubmitHandler<IQuotesItemForm> = useCallback(\n    async (item: IQuotesItemForm) => {\n      try {\n        if (quoteItem) {\n          const total = item.HasItem\n            ? (item.UnitValue.toFloat() * quoteItem.Amount).toFloatBr()\n            : '';\n\n          const quoteItemReset = {\n            ...item,\n            ReferenceCode: '',\n            UnitValue: '0',\n            IpiValue: '0',\n            IcmsValue: '0',\n            DeliveryTime: 0,\n            Observation: '',\n            Total: ''\n          } as IQuoteItem;\n\n          const newItem = item.HasItem ? item : quoteItemReset;\n\n          const newQuoteItem = {\n            ...quoteItem,\n            ...newItem,\n            Total: total\n          };\n\n          // salvar no endpoint\n          setLoading(true);\n          const response = await QuoteDetailService.UpdateQuoteItem(\n            newQuoteItem\n          );\n          setLoading(false);\n\n          const newQuoteItems = quoteItemsContext?.map(q =>\n            q.Id === newQuoteItem.Id ? newQuoteItem : q\n          );\n          if (newQuoteItems) setQuoteItemsContext(newQuoteItems);\n\n          handlerCollapse(quoteItem.Id);\n        }\n      } catch (err) {\n        console.log('error in save QuotesItemsForm', err);\n      }\n    },\n    [\n      handlerCollapse,\n      quoteItem,\n      quoteItemsContext,\n      setLoading,\n      setQuoteItemsContext\n    ]\n  );\n\n  const handlerHasProduct = useCallback(\n    (e: React.MouseEvent<HTMLInputElement>) => {\n      const { checked } = e.currentTarget;\n      setRequired(checked);\n      if (!checked) {\n        const quoteItemReset = {\n          ReferenceCode: '',\n          UnitValue: '0',\n          IpiValue: '0',\n          IcmsValue: '0',\n          DeliveryTime: 0,\n          Observation: '',\n          Total: ''\n        } as IQuoteItem;\n        reset(quoteItemReset);\n      }\n    },\n    [reset]\n  );\n  useEffect(() => {\n    if (quoteItemId) {\n      const item = quoteItemsContext?.find(quote => quote.Id === quoteItemId);\n      if (item) {\n        reset(item);\n        setQuoteItem(item);\n        setRequired(item.HasItem);\n      }\n    }\n  }, [quoteItemId, quoteItemsContext, reset, setRequired]);\n\n  return (\n    <Container className={quoteItem?.Id ? '' : 'hide'}>\n      <Form onSubmit={handleSubmit(onSubmit)} noValidate>\n        <WrapperInputs>\n          <Panel>\n            <Row>\n              <Column>\n                <LabelCustom>Cód. Produto</LabelCustom>\n                <Text>{quoteItem?.ProductCode}</Text>\n              </Column>\n              <Column>\n                <LabelCustom>Quantidade</LabelCustom>\n                <Text>\n                  {quoteItem?.Amount} <small>{quoteItem?.Unit}</small>\n                </Text>\n              </Column>\n              <Column>\n                <InputForm\n                  label=\"Possui Produto?\"\n                  register={register('HasItem')}\n                  type=\"checkbox\"\n                  errors={errors}\n                  onClick={handlerHasProduct}\n                />\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <InputForm\n                  disabled={!required}\n                  label=\"Cod. Referência\"\n                  register={register('ReferenceCode', {\n                    required: { value: required, message: 'campo obrigatório' },\n                    maxLength: {\n                      value: 10,\n                      message: 'Valor máximo de 10 caracteres'\n                    }\n                  })}\n                  placeholder=\"Digite o Código\"\n                  type=\"text\"\n                  errors={errors}\n                />\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <InputForm\n                  disabled={!required}\n                  label=\"Valor Unitário\"\n                  register={register('UnitValue', {\n                    required: { value: required, message: 'campo obrigatório' }\n                  })}\n                  type=\"text\"\n                  placeholder=\"Digite o Valor\"\n                  mask=\"currency\"\n                  errors={errors}\n                />\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <InputForm\n                  disabled={!required}\n                  label=\"Aliq. IPI(%)\"\n                  register={register('IpiValue', {\n                    required: { value: required, message: 'campo obrigatório' }\n                  })}\n                  type=\"text\"\n                  placeholder=\"Digite o IPI\"\n                  mask=\"percent\"\n                  errors={errors}\n                />\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <InputForm\n                  disabled={!required}\n                  label=\"Aliq. ICMS(%)\"\n                  register={register('IcmsValue', {\n                    required: { value: required, message: 'campo obrigatório' }\n                  })}\n                  type=\"text\"\n                  mask=\"percent\"\n                  placeholder=\"Digite o ICMS\"\n                  errors={errors}\n                />\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <InputForm\n                  disabled={!required}\n                  label=\"Prazo Entrega(Dias)\"\n                  register={register('DeliveryTime', {\n                    required: { value: required, message: 'campo obrigatório' }\n                  })}\n                  placeholder=\"Digite o(s) dia(s)\"\n                  type=\"number\"\n                  errors={errors}\n                  maxLength={3}\n                />\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <InputForm\n                  disabled={!required}\n                  label=\"Observação (Opcional)\"\n                  register={register('Observation', {\n                    maxLength: {\n                      value: 50,\n                      message: 'Valor máximo de 50 caracteres'\n                    }\n                  })}\n                  placeholder=\"Digite uma Observação\"\n                  type=\"text\"\n                  errors={errors}\n                />\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <Button type=\"submit\" outlined>\n                  Salvar\n                </Button>\n              </Column>\n            </Row>\n          </Panel>\n        </WrapperInputs>\n      </Form>\n    </Container>\n  );\n};\n\nexport default React.memo(QuotesItemsForm);\n","import styled, { css } from 'styled-components';\r\nimport { KeyboardArrowDown, KeyboardArrowUp, Tag } from '../../styles/Icons';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  max-width: 100vw;\r\n  margin-top: 15px;\r\n  .rowPanel {\r\n    cursor: pointer;\r\n    * {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  .rowPanel.hide {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const TagIcon = styled(Tag)`\r\n  width: 24px;\r\n  height: 24px;\r\n`;\r\n\r\nconst arrowIconCSS = css`\r\n  width: 32px;\r\n  height: 32px;\r\n  display: none;\r\n  &.active {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const ArrowUpIcon = styled(KeyboardArrowUp)`\r\n  ${arrowIconCSS}\r\n`;\r\n\r\nexport const ArrowDownIcon = styled(KeyboardArrowDown)`\r\n  ${arrowIconCSS}\r\n`;\r\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { handleScrool } from '../../utils/scrool';\nimport {\n  CenterPanel,\n  Column,\n  LabelCustom,\n  LeftPanel,\n  RightPanel,\n  Row,\n  RowPanel,\n  Text\n} from '..';\nimport { useContextQuoteItems } from '../../Context/QuoteItems';\nimport { Panel } from '../Panel';\nimport QuotesItemsForm from '../QuotesItemsForm';\nimport { ArrowDownIcon, ArrowUpIcon, Container, TagIcon } from './styles';\nimport { IQuoteItem } from '../../Interfaces/QuotesDetail';\nimport { Button } from '../Button';\n\nconst QuotesItems: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({\n  ...rest\n}) => {\n  const [quoteItemId, setQuoteItemId] = useState<string>('');\n  const [quoteItems, setQuoteItems] = useState<IQuoteItem[]>();\n\n  const { quoteItemsContext } = useContextQuoteItems();\n\n  const handleCollapse = useCallback((id: string) => {\n    setQuoteItemId(prevState => (prevState === id ? '' : id));\n\n    handleScrool(id);\n  }, []);\n\n  useEffect(() => {\n    setQuoteItems(\n      quoteItemsContext?.slice(0, Math.min(10, quoteItemsContext.length))\n    );\n  }, [quoteItemsContext]);\n\n  const handleLoadMore = useCallback(() => {\n    if (quoteItemsContext)\n      setQuoteItems(prevState => ({\n        ...prevState,\n        ...quoteItemsContext?.slice(\n          prevState?.length,\n          Math.min(10, quoteItemsContext.length)\n        )\n      }));\n  }, [quoteItemsContext]);\n\n  return (\n    <Container {...{ rest }}>\n      {!quoteItems && (\n        <>\n          <br />\n          <Panel backgroundColor=\"panel-warning\">\n            Não foi possível encontrar os itens para essa Cotação\n          </Panel>\n        </>\n      )}\n      {console.log(quoteItems)}\n      {quoteItems?.map(\n        ({ Id: id, ItemId: itemId, Product: product, Total: total }) => (\n          <RowPanel\n            key={id}\n            id={id}\n            onClick={() => handleCollapse(id)}\n            className={\n              quoteItemId === '' || quoteItemId === id\n                ? 'rowPanel'\n                : ' hide rowPanel'\n            }\n          >\n            <LeftPanel>\n              <TagIcon />\n            </LeftPanel>\n            <CenterPanel>\n              <Row>\n                <Column>\n                  <LabelCustom>Item</LabelCustom>\n                  <Text>{itemId}</Text>\n                </Column>\n              </Row>\n              <Row>\n                <Column>\n                  <LabelCustom>Produto</LabelCustom>\n                  <Text colorFont=\"blue-light\">{product}</Text>\n                </Column>\n\n                <Column width=\"50%\">\n                  {total ? (\n                    <div>\n                      <LabelCustom>Total</LabelCustom>\n                      <Text>R$ {total}</Text>\n                    </div>\n                  ) : (\n                    ''\n                  )}\n                </Column>\n              </Row>\n            </CenterPanel>\n            <RightPanel>\n              <ArrowUpIcon className={quoteItemId === id ? 'active' : ''} />\n              <ArrowDownIcon className={quoteItemId === id ? '' : 'active'} />\n            </RightPanel>\n          </RowPanel>\n        )\n      )}\n      {quoteItems && quoteItems.length > 10 && (\n        <Row>\n          <Column align=\"center\">\n            <Button width=\"auto\" outlined>\n              Carregar Mais ...\n            </Button>\n          </Column>\n        </Row>\n      )}\n      {quoteItemId && (\n        <QuotesItemsForm\n          quoteItemId={quoteItemId}\n          handlerCollapse={handleCollapse}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default React.memo(QuotesItems);\n","const parseValue = (value: any) => {\n  const escaped = `${value}`.replace(/\"/g, `\"\"`);\n  return /[\",\\n]/.test(escaped) ? `\"${escaped}\"` : escaped;\n};\n\nconst toCSV = (obj: any, h?: string[]) => {\n  const csvRows = [];\n\n  const headers: string[] = h ?? Object.keys(obj[0]);\n  csvRows.push(headers.map(x => parseValue(x)).join(';'));\n\n  obj.forEach((o: any) => {\n    const values = headers.map((header: string) => parseValue(o[header]));\n    csvRows.push(values.join(';'));\n  });\n  return csvRows.join('\\n');\n};\n\nexport const buildURI = (obj: any, header?: string[]) => {\n  const csv = toCSV(obj, header);\n  const textEncoder = new TextEncoder();\n  const csvEncoded = textEncoder.encode(csv);\n  const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  const type = isSafari\n    ? 'application/csv;charset=utf-8'\n    : 'text/csv;charset=utf-8';\n  const blob = new Blob([new Uint8Array([0xef, 0xbb, 0xbf]), csvEncoded], {\n    type\n  });\n  const dataURI = `data:${type};${csvEncoded}`;\n\n  const URL = window.URL || window.webkitURL;\n\n  return typeof URL.createObjectURL === 'undefined'\n    ? dataURI\n    : URL.createObjectURL(blob);\n};\n","import styled, { css } from 'styled-components';\nimport { CenterPanel } from '../../components/RowPanel/CenterPanel/index';\nimport { HandHoldingUsd, Print } from '../../styles/Icons';\n\nexport const Container = styled.div``;\n\nexport const WrapperTop = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 15px 0;\n  justify-content: space-between;\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport const WrapperImportExport = styled.div`\n  display: flex;\n  font-size: 10px;\n  align-items: center;\n  justify-content: center;\n`;\nconst ImportExportCss = css`\n  display: flex;\n  font-size: 10px;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const WrapperImport = styled.div`\n  ${ImportExportCss}\n  margin-left: 15px;\n  @media (max-width: 500px) {\n    margin-left: 5px;\n  }\n`;\n\nexport const WrapperExport = styled.div`\n  ${ImportExportCss}\n`;\n\nexport const WrapperPrint = styled.div`\n  display: flex;\n  font-size: 10px;\n  flex-direction: column;\n`;\n\nexport const Import = styled.div`\n  #file-upload {\n    display: none;\n  }\n\n  #file-upload:invalid ~ .import {\n    display: none;\n  }\n\n  #file-upload:valid ~ label {\n    display: none;\n  }\n`;\n\nconst iconCSS = css`\n  width: 24px;\n  height: 24px;\n  flex-shrink: 0;\n`;\n\nexport const IconPrint = styled(Print)`\n  ${iconCSS}\n  margin-left: 5px;\n  path {\n    color: var(--black-print);\n  }\n`;\n\nexport const IconHand = styled(HandHoldingUsd)`\n  ${iconCSS}\n  path {\n    color: var(--status-default);\n  }\n`;\n\nexport const WrapperTitleQuotes = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: center;\n  padding-bottom: 10px;\n  span {\n    margin-left: 5px;\n  }\n`;\n\nexport const ContentPainelHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const WrapperRadio = styled.div`\n  display: flex;\n  align-items: center;\n  input {\n    margin-right: 5px;\n  }\n`;\n\nexport const WrapperWarningRegister = styled.div`\n  background: var(--background);\n  box-sizing: border-box;\n  padding: 20px;\n  width: 100%;\n\n  h2 {\n    padding-top: 0;\n    text-align: center;\n  }\n  .buttons {\n    margin-top: 15px;\n    > div {\n      align-items: center;\n    }\n  }\n`;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { Link, useParams } from 'react-router-dom';\nimport { IReactToPrintProps, useReactToPrint } from 'react-to-print';\nimport { parse } from 'papaparse';\nimport { QuoteService } from '../../services/quoteService';\nimport { IQuote } from '../../Interfaces/Quotes';\nimport { handleScrool } from '../../utils/scrool';\nimport QuoteItemsCsv from '../../components/QuoteItemsCsv';\nimport { QuoteDetailService } from '../../services/quoteDetailService';\nimport QuoteDetailPrint from '../../components/QuoteDetailPrint';\nimport {\n  Button,\n  ButtonIcon,\n  Column,\n  InputForm,\n  LabelCustom,\n  Panel,\n  Row,\n  SelectForm,\n  Text\n} from '../../components';\nimport QuotesItems from '../../components/QuotesItems';\nimport { useMainContext } from '../../Context/Main';\nimport { useContextQuoteItems } from '../../Context/QuoteItems';\nimport {\n  IPaymentConditionsSelect,\n  IShippingTypeSelect,\n  IQuoteItem,\n  IQuoteCSV\n} from '../../Interfaces/QuotesDetail';\nimport { IShippingPayment } from '../../Interfaces/ShippingPayment';\nimport { ICompany } from '../../Interfaces/Company';\nimport { ISupplier } from '../../Interfaces/Supplier';\n\nimport {\n  mocaCompany,\n  mocaSelectPaymentConditions,\n  mocaSelectShipping,\n  mocaShippingAndPayment,\n  mocaSupplier\n} from '../../MoocasData/QuotesDetail';\n\nimport { FileCsv, Save, Print, ArrowBackIos } from '../../styles/Icons';\nimport { buildURI } from '../../utils/exportCSV';\nimport {\n  mapQuoteCSVToQuoteItem,\n  mapQuoteItemToQuoteCSV\n} from '../../utils/mappersCSV';\nimport {\n  Container,\n  IconHand,\n  Import,\n  WrapperTitleQuotes,\n  WrapperTop,\n  WrapperRadio,\n  WrapperWarningRegister\n} from './styles';\n\nconst QuotesDetail: React.FC = () => {\n  const { quoteId } = useParams<{ quoteId: string }>();\n\n  const { quoteItemsContext, setQuoteItemsContext } = useContextQuoteItems();\n\n  const [selectShipping, setSelectShipping] = useState<IShippingTypeSelect[]>(\n    []\n  );\n\n  const [selectPaymentConditions, setSelectPaymentConditions] = useState<\n    IPaymentConditionsSelect[]\n  >([]);\n\n  const [company, setCompany] = useState<ICompany>({} as ICompany);\n\n  const [quote, setQuote] = useState<IQuote | null>(null);\n\n  const [tableCsv, settableCsv] = useState<IQuoteItem[]>([]);\n\n  const [importType, setImportType] = useState<string>('csv');\n\n  const [supplier, setSupplier] = useState<ISupplier>({} as ISupplier);\n\n  const inputUpload = useRef<HTMLInputElement>(null);\n\n  const linkExportCSV = useRef<HTMLAnchorElement>(null);\n\n  const refQuoteDetailPrint = useRef<HTMLDivElement>(null);\n\n  const refRadio = useRef<HTMLInputElement>(null);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    getValues,\n    formState: { errors }\n  } = useForm<IShippingPayment>();\n\n  const { setLoading } = useMainContext();\n\n  const onSubmit: SubmitHandler<IShippingPayment> = useCallback(\n    async (item: IShippingPayment) => {\n      try {\n        setCompany(prevState => ({ ...prevState, ...item }));\n\n        setLoading(true);\n        await QuoteDetailService.UpdateShippingAndPayment(item);\n        reset(item);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    [reset, setLoading]\n  );\n\n  const objReactToPrint: IReactToPrintProps = {\n    content: () => refQuoteDetailPrint.current\n  };\n\n  const handlerPrint = useReactToPrint(objReactToPrint);\n\n  const handleRadioImport = useCallback((type: string) => {\n    setImportType(type);\n    handleScrool(type);\n  }, []);\n\n  const handlerExportCSV = useCallback(() => {\n    const newData = mapQuoteItemToQuoteCSV(quoteItemsContext);\n    const URI = buildURI(newData);\n\n    linkExportCSV?.current?.setAttribute('download', 'download.csv');\n    linkExportCSV?.current?.setAttribute('hidden', '');\n    linkExportCSV?.current?.setAttribute('href', URI);\n\n    linkExportCSV?.current?.click();\n  }, [quoteItemsContext]);\n\n  const handlerSaveCSV = useCallback(() => {\n    if (inputUpload.current) {\n      if (inputUpload.current.files) {\n        const list = inputUpload.current.files?.[0];\n        if (list.name.split('.')[1] === 'csv') {\n          const toFile = async () => {\n            const text = await list.text();\n            const parsed = parse(text, { header: true });\n            const result = mapQuoteCSVToQuoteItem(parsed.data as IQuoteCSV[]);\n            settableCsv(result);\n            handleScrool('csv');\n          };\n          toFile();\n        }\n      }\n      inputUpload.current.value = '';\n    }\n  }, []);\n\n  useEffect(() => {\n    refRadio.current?.setAttribute('checked', 'true');\n    // pegar valor de endpoint\n    setCompany(mocaCompany);\n\n    // pegar valor de endpoint\n    setSupplier(mocaSupplier);\n\n    // pegar valor de endpoint\n    setSelectShipping(mocaSelectShipping);\n\n    // pegar valor de endpoint\n    setSelectPaymentConditions(mocaSelectPaymentConditions);\n\n    const getQuoteItems = async () => {\n      try {\n        setLoading(true);\n        const items = await QuoteDetailService.GetQuoteItems(\n          quoteId,\n          setLoading\n        );\n        setLoading(false);\n        setQuoteItemsContext(items);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    const getShippingAndPayment = async () => {\n      try {\n        setLoading(true);\n        const item = await QuoteDetailService.GetShippingAndPaymentForm(\n          quoteId\n        );\n        reset(item);\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    const getQuote = async () => {\n      const result = await QuoteService.GetById(quoteId, setLoading);\n      setQuote(result);\n    };\n    getQuote();\n    getQuoteItems();\n    getShippingAndPayment();\n  }, [quoteId, reset, setQuoteItemsContext, setLoading]);\n\n  return (\n    <>\n      <QuoteDetailPrint\n        ref={refQuoteDetailPrint}\n        quoteItems={quoteItemsContext}\n        supplier={supplier}\n        company={company}\n        quote={quote}\n        shipping={selectShipping}\n        payment={selectPaymentConditions}\n        shippingPayment={getValues()}\n      />\n      <Container>\n        <WrapperTop>\n          <Link to=\"/\">\n            <ButtonIcon text=\"Voltar\" colorIcon=\"black-print\">\n              <ArrowBackIos />\n            </ButtonIcon>\n          </Link>\n          <ButtonIcon\n            text=\"Imprimir\"\n            colorIcon=\"black-print\"\n            onClick={handlerPrint}\n          >\n            <Print />\n          </ButtonIcon>\n        </WrapperTop>\n        <Panel>\n          <Row>\n            <Column>\n              <WrapperTitleQuotes>\n                <IconHand />\n                <span>{quote?.NumQuote}</span>\n              </WrapperTitleQuotes>\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <LabelCustom>Empresa</LabelCustom>\n              <Text>{company?.CompanyName}</Text>\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <LabelCustom>Data Emissão</LabelCustom>\n              <Text>{quote?.DtEmission.toDateBr()}</Text>\n            </Column>\n            <Column>\n              <LabelCustom>Data Limite</LabelCustom>\n              <Text>{quote?.DtLimit.toDateBr()}</Text>\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <LabelCustom>CEP</LabelCustom>\n              <Text>{company?.ZipCode}</Text>\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <LabelCustom>Endereço</LabelCustom>\n              <Text>{company?.Address}</Text>\n            </Column>\n            <Column>\n              <LabelCustom>Numero</LabelCustom>\n              <Text>{company?.Number}</Text>\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <LabelCustom>Complemento</LabelCustom>\n              <Text>{company?.Complement}</Text>\n            </Column>\n            <Column>\n              <LabelCustom>Bairro</LabelCustom>\n              <Text>{company?.Neighborhood}</Text>\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <LabelCustom>UF</LabelCustom>\n              <Text>{company?.State}</Text>\n            </Column>\n            <Column>\n              <LabelCustom>Cidade</LabelCustom>\n              <Text>{company?.City}</Text>\n            </Column>\n          </Row>\n          <form\n            style={{ width: '100%' }}\n            onSubmit={handleSubmit(onSubmit)}\n            noValidate\n          >\n            <Row>\n              <Column>\n                <SelectForm\n                  register={register('ShippingTypeId', {\n                    required: 'Campo Obrigatório'\n                  })}\n                  label=\"Tipo Frete\"\n                >\n                  <option key=\"-1\" value=\"-1\">\n                    Selecione\n                  </option>\n                  {selectShipping.map(\n                    ({ shippingTypeId: id, shippingType: type }) => (\n                      <option value={id} key={id}>\n                        {type}\n                      </option>\n                    )\n                  )}\n                </SelectForm>\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <SelectForm\n                  register={register('PaymentConditionsId', {\n                    required: 'Campo Obrigatório'\n                  })}\n                  label=\"Cond. Pagamento\"\n                >\n                  <option value=\"-1\" key=\"-1\">\n                    Selecione\n                  </option>\n                  {selectPaymentConditions.map(\n                    ({\n                      paymentConditionsId: id,\n                      paymentCondition: condition\n                    }) => (\n                      <option value={id} key={id}>\n                        {condition}\n                      </option>\n                    )\n                  )}\n                </SelectForm>\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <InputForm\n                  label=\"Valor Frete\"\n                  register={register('ShippingValue', {\n                    required: 'Campo Obrigatório'\n                  })}\n                  placeholder=\"Digite o Valor\"\n                  type=\"number\"\n                />\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <Button type=\"submit\" outlined>\n                  Salvar\n                </Button>\n              </Column>\n            </Row>\n          </form>\n        </Panel>\n        <Panel margin=\"15px 15px\">\n          <WrapperWarningRegister>\n            <Row>\n              <Column>\n                <h2>Cadastrar itens da cotação?</h2>\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <WrapperRadio>\n                  <input\n                    id=\"manual\"\n                    type=\"radio\"\n                    name=\"importRadio\"\n                    value=\"manual\"\n                    onClick={() => handleRadioImport('manual')}\n                  />\n                  <LabelCustom htmlFor=\"manual\"> Manualmente</LabelCustom>\n                </WrapperRadio>\n              </Column>\n            </Row>\n            <Row>\n              <Column>\n                <WrapperRadio>\n                  <input\n                    id=\"byCsv\"\n                    type=\"radio\"\n                    name=\"importRadio\"\n                    value=\"csv\"\n                    ref={refRadio}\n                    onClick={() => handleRadioImport('csv')}\n                  />\n                  <LabelCustom htmlFor=\"byCsv\">via importação CSV</LabelCustom>\n                </WrapperRadio>\n              </Column>\n            </Row>\n            <Row className=\"buttons\">\n              <Column>\n                <ButtonIcon\n                  text=\"Exportar\"\n                  colorIcon=\"green-csv\"\n                  onClick={() => handlerExportCSV()}\n                >\n                  <FileCsv />\n                  <a\n                    target=\"_blank\"\n                    ref={linkExportCSV}\n                    href=\"empty\"\n                    style={{ display: 'none' }}\n                    rel=\"noreferrer\"\n                  >\n                    link\n                  </a>\n                </ButtonIcon>\n              </Column>\n              <Column>\n                <Import>\n                  <input\n                    accept=\".csv\"\n                    ref={inputUpload}\n                    id=\"file-upload\"\n                    type=\"file\"\n                    required\n                  />\n                  <label htmlFor=\"file-upload\">\n                    <ButtonIcon text=\"Importar\" colorIcon=\"green-csv\">\n                      <FileCsv />\n                    </ButtonIcon>\n                  </label>\n                  <ButtonIcon\n                    className=\"import\"\n                    text=\"Salvar\"\n                    colorIcon=\"white\"\n                    backColor=\"primary\"\n                    textColor=\"white\"\n                    onClick={() => handlerSaveCSV()}\n                  >\n                    <Save />\n                  </ButtonIcon>\n                </Import>\n              </Column>\n            </Row>\n          </WrapperWarningRegister>\n        </Panel>\n        <Row align=\"center\">\n          <Column width=\"50%\">\n            <Button>Enviar</Button>\n          </Column>\n        </Row>\n\n        {importType === 'csv' && <QuoteItemsCsv id=\"csv\" data={tableCsv} />}\n        {importType === 'manual' && <QuotesItems id=\"manual\" />}\n      </Container>\n    </>\n  );\n};\nexport default QuotesDetail;\n","import { IQuoteCSV, IQuoteItem } from '../Interfaces/QuotesDetail';\n\nexport const mapQuoteItemToQuoteCSV = (data: IQuoteItem[] | null) =>\n  data?.map(\n    q =>\n      ({\n        ItemId: q.ItemId,\n        CodigoProduto: q.ProductCode,\n        Disponivel: q.HasItem ? 'sim' : 'nao',\n        CodigoDeReferencia: q.ReferenceCode,\n        Produto: q.Product,\n        ValorUnitario: q.UnitValue,\n        ValorIPIPercentual: q.IpiValue,\n        ValorICMSPercentual: q.IcmsValue,\n        PrazoEntregaDias: q.DeliveryTime,\n        Observacao: q.Observation\n      } as IQuoteCSV)\n  );\n\nexport const mapQuoteCSVToQuoteItem = (data: IQuoteCSV[]) =>\n  data.map(\n    q =>\n      ({\n        ItemId: q.ItemId,\n        ProductCode: q.CodigoProduto,\n        HasItem: q.Disponivel === 'sim',\n        ReferenceCode: q.CodigoDeReferencia,\n        Product: q.Produto,\n        UnitValue: q.ValorUnitario,\n        IpiValue: q.ValorIPIPercentual,\n        IcmsValue: q.ValorICMSPercentual,\n        DeliveryTime: q.PrazoEntregaDias,\n        Observation: q.Observacao\n      } as IQuoteItem)\n  );\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  form {\n    width: 100%;\n  }\n`;\n","import { ISupplier } from '../Interfaces/Supplier';\nimport { mocaSupplier } from '../MoocasData/Supplier';\n\nexport const SupplierService = {\n  Get: (cnpj: string) =>\n    new Promise<ISupplier>(resolve =>\n      setTimeout(() => {\n        const result = mocaSupplier.find(s => s.cnpj === cnpj);\n        resolve(result || ({} as ISupplier));\n      }, 2000)\n    ),\n\n  Update: (item: ISupplier) =>\n    new Promise<string>(resolve => {\n      setTimeout(() => {\n        // update na base\n        resolve('done!');\n      }, 2000);\n    })\n};\n","import React, { useCallback } from 'react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { ISupplier } from '../../Interfaces/Supplier';\nimport { InputForm, Row, Column, Panel, Button } from '../../components';\n\nimport { Container } from './styles';\nimport { useMainContext } from '../../Context/Main';\nimport { SupplierService } from '../../services/supplierService';\n\nconst RegisterSupplier: React.FC = () => {\n  const { setLoading } = useMainContext();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors }\n  } = useForm<ISupplier>();\n\n  const onSubmit: SubmitHandler<ISupplier> = useCallback(\n    async (item: ISupplier) => {\n      try {\n        setLoading(true);\n        const response = await SupplierService.Update(item);\n        setLoading(false);\n        // setCompany();\n      } catch (err) {\n        console.log('error in save QuotesItemsForm', err);\n      }\n    },\n    [setLoading]\n  );\n\n  return (\n    <Container>\n      <h1>Cadastro do Fornecedor</h1>\n      <Panel>\n        <form onSubmit={handleSubmit(onSubmit)} noValidate>\n          <Row>\n            <Column>\n              <InputForm\n                label=\"Razão Social\"\n                register={register('companyName', {\n                  required: { value: true, message: 'campo obrigatório' }\n                })}\n                placeholder=\"Digite a Razão Social\"\n                type=\"text\"\n                errors={errors}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <InputForm\n                label=\"Nome Fantasia\"\n                register={register('fantasyName', {\n                  required: { value: true, message: 'campo obrigatório' }\n                })}\n                placeholder=\"Digite o Nome Fantasia\"\n                type=\"text\"\n                errors={errors}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <InputForm\n                label=\"CNPJ\"\n                register={register('fantasyName', {\n                  required: { value: true, message: 'campo obrigatório' }\n                })}\n                placeholder=\"Digite o CNPJ\"\n                type=\"text\"\n                errors={errors}\n                mask=\"cnpj\"\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <InputForm\n                label=\"CEP\"\n                register={register('zipCode', {\n                  required: { value: true, message: 'campo obrigatório' }\n                })}\n                placeholder=\"Digite o CEP\"\n                type=\"text\"\n                errors={errors}\n                mask=\"cep\"\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <InputForm\n                label=\"Endereço\"\n                register={register('address', {\n                  required: { value: true, message: 'campo obrigatório' }\n                })}\n                placeholder=\"Digite o Endereço\"\n                type=\"text\"\n                errors={errors}\n              />\n            </Column>\n            <Column width=\"50%\">\n              <InputForm\n                label=\"Numero\"\n                register={register('address', {\n                  required: { value: true, message: 'campo obrigatório' }\n                })}\n                placeholder=\"Digite o Endereço\"\n                type=\"number\"\n                errors={errors}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column width=\"50%\">\n              <InputForm\n                label=\"Complemento\"\n                register={register('complement')}\n                placeholder=\"Digite o Complemento\"\n                type=\"text\"\n                errors={errors}\n              />\n            </Column>\n            <Column>\n              <InputForm\n                label=\"Bairro\"\n                register={register('neighborhood', {\n                  required: { value: true, message: 'campo obrigatório' }\n                })}\n                placeholder=\"Digite o Bairro\"\n                type=\"text\"\n                errors={errors}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column width=\"50%\">\n              <InputForm\n                label=\"UF\"\n                register={register('state', {\n                  required: { value: true, message: 'campo obrigatório' }\n                })}\n                placeholder=\"Digite o Estado\"\n                type=\"text\"\n                errors={errors}\n                maxLength={2}\n              />\n            </Column>\n            <Column>\n              <InputForm\n                label=\"Cidade\"\n                register={register('city', {\n                  required: { value: true, message: 'campo obrigatório' }\n                })}\n                placeholder=\"Digite a Cidade\"\n                type=\"text\"\n                errors={errors}\n              />\n            </Column>\n          </Row>\n          <Row>\n            <Column>\n              <br />\n              <Button type=\"submit\">Salvar</Button>\n            </Column>\n          </Row>\n        </form>\n      </Panel>\n    </Container>\n  );\n};\n\nexport default RegisterSupplier;\n","import { useMainContext } from 'Context/Main';\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { isAuthenticated } from '../Auth';\nimport { ContextQuoteItemsProvider } from '../Context/QuoteItems';\nimport Admin from '../Pages/Admin';\nimport Login from '../Pages/Login';\nimport Logout from '../Pages/Logout';\nimport Quotes from '../Pages/Quotes';\nimport QuotesDetail from '../Pages/QuotesDetail';\nimport RegisterSupplier from '../Pages/RegisterSupplier';\n\nconst PrivateRoute: React.FC<{ path: string; exact?: boolean }> = ({\n  children,\n  path,\n  exact\n}) => {\n  const { profile } = useMainContext();\n  return (\n    <Route exact path={path}>\n      {profile !== null ? <>{children}</> : <Redirect to=\"/login\" />}\n      {/* {isAuthenticated() ? <>{children}</> : <h1>tem que se logar</h1>} */}\n    </Route>\n  );\n};\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <PrivateRoute exact path=\"/\">\n      <Quotes />\n    </PrivateRoute>\n    <PrivateRoute path=\"/quotesDetail/:quoteId\">\n      <ContextQuoteItemsProvider>\n        <QuotesDetail />\n      </ContextQuoteItemsProvider>\n    </PrivateRoute>\n    <PrivateRoute path=\"/registerSupplier\">\n      <RegisterSupplier />\n    </PrivateRoute>\n    <PrivateRoute path=\"/admin\">\n      <Admin />\n    </PrivateRoute>\n    <Route path=\"/logout\">\n      <Logout />\n    </Route>\n    <Route path=\"/login\">\n      <Login />\n    </Route>\n    <Route path=\"*\">\n      <h1>Página não encontrada</h1>\n    </Route>\n    {/* <PrivateRoute path=\"/app\" component={() => Quotes} /> */}\n  </Switch>\n);\n\n// const Routes: React.FC = () => <h1>rota</h1>;\n\nexport default Routes;\n","import styled, { keyframes } from 'styled-components';\r\nimport { Spinner } from '../../styles/Icons';\r\n\r\nexport const Container = styled.div<{ show: boolean }>`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  display: ${({ show }) => (show ? 'flex' : 'none')};\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: var(--gradient-primary);\r\n  color: var(--white);\r\n  z-index: 5;\r\n`;\r\n\r\nconst loading = keyframes`\r\n  /* Safari support */\r\n  from {\r\n    transform: rotate(0turn);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(1turn);\r\n  }\r\n  `;\r\n\r\nexport const WrapperSpinner = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: relative;\r\n  ::after {\r\n    content: '';\r\n    width: 30px;\r\n    height: 30px;\r\n    border: 10px solid var(--primary);\r\n    //border-top: 10px dashed var(--primary);\r\n    //border-top-style: dashed\r\n\r\n    border-radius: 50%;\r\n    /* transform: rotate(0.16turn);\r\n    animation: ${loading} 1s ease infinite; */\r\n  }\r\n`;\r\n\r\nexport const SpinnerIcon = styled(Spinner)`\r\n  width: 50px;\r\n  height: 50px;\r\n  //position: absolute;\r\n  path {\r\n    fill: var(--white);\r\n  }\r\n  animation: ${loading} 1s ease-in-out infinite;\r\n`;\r\n","import React from 'react';\r\nimport { useMainContext } from '../../Context/Main';\r\nimport { Container, SpinnerIcon } from './styles';\r\n\r\nconst Loading: React.FC = () => {\r\n  const { loading } = useMainContext();\r\n  return (\r\n    <Container show={loading}>\r\n      <SpinnerIcon />\r\n      Processando...\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const InfoProfile = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: right;\n  width: 100%;\n\n  small {\n    color: var(--blue-light);\n    text-transform: capitalize;\n  }\n  span:nth-child(2) {\n    color: var(--primary);\n    text-transform: capitalize;\n  }\n  small:nth-child(3) {\n    color: #326d8f;\n    text-transform: lowercase;\n  }\n`;\n\nexport const IconAvatar = styled.img`\n  height: 45px;\n  width: 45px;\n  margin: 13px 15px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n`;\n","export default __webpack_public_path__ + \"static/media/avatar-default.5038cd39.svg\";","import React, { useEffect, useState } from 'react';\n\nimport { Container, InfoProfile, IconAvatar } from './styles';\nimport imgProfileDefault from '../../assets/avatar-default.svg';\nimport { useMainContext } from '../../Context/Main';\n\nconst Profile: React.FC = () => {\n  const { profile } = useMainContext();\n\n  return (\n    <Container>\n      <InfoProfile>\n        <small>Bem vindo</small>\n        <span>{profile?.Name}</span>\n        <small>{profile?.Email}</small>\n      </InfoProfile>\n      <IconAvatar src={profile?.ImageUrl || imgProfileDefault} />\n    </Container>\n  );\n};\n\nexport default React.memo(Profile);\n","import styled, { css } from 'styled-components';\nimport {\n  ArrowForwardIos,\n  Building,\n  Cog,\n  HandHoldingUsd,\n  PowerOff\n} from '../../styles/Icons';\n\nexport const Container = styled.div`\n  position: fixed;\n  top: 70px;\n  left: 0;\n  bottom: 0;\n  transform: translate(-150%);\n  z-index: 2;\n\n  &.menu-open {\n    width: 100%;\n    background-color: #0000009e;\n    transform: translate(0px);\n  }\n  .menu-open {\n    transform: translate(0px);\n  }\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  flex-direction: column;\n  transition: all 0.5s ease-in-out;\n  transform: translate(-150%);\n  z-index: 2;\n  background-color: var(--white);\n  border-radius: 0 0 15px 0;\n  left: 0;\n  width: 270px;\n  box-shadow: var(--shadow-default);\n  height: 100%;\n  overflow-y: auto;\n  justify-content: space-between;\n\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: var(--grey-light);\n    border-radius: 10px;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    list-style-type: none;\n\n    li:nth-child(1) {\n      margin-top: 30px;\n    }\n\n    li:last-child {\n      margin-top: 30px;\n    }\n  }\n`;\n\nexport const WrapperLink = styled.div`\n  display: flex;\n  //padding: 20px 20px;\n  width: 100%;\n  max-width: 100%;\n  align-items: center;\n\n  a {\n    font-size: 14px;\n    display: flex;\n    text-decoration: none;\n    display: flex;\n    width: 100%;\n    max-width: 100%;\n    padding: 20px 10px 20px 15px;\n    align-items: center;\n    position: relative;\n\n    ::after {\n      content: '';\n      position: absolute;\n      right: 0px;\n      width: 2px;\n      height: 59px;\n      border: 1px solid transparent;\n      background-color: var(--primary);\n      transform: scaleY(0);\n    }\n\n    :hover {\n      background-color: var(--background);\n      transform: translateY(-1px);\n      transition: all 0.3s;\n      ::after {\n        transition: all 0.3s ease-in;\n        transform: scaleY(1);\n      }\n    }\n    &.active {\n      background-color: var(--background);\n      :hover {\n        transition: all 0.3s;\n        transform: translateY(-1px);\n      }\n    }\n    &.active::after {\n      transform: scaleY(1);\n      content: '';\n      position: absolute;\n      right: 0px;\n      width: 2px;\n      height: 59px;\n      border: 1px solid transparent;\n      background-color: var(--primary);\n    }\n  }\n\n  &.admin {\n    border-top: 1px solid var(--color-borders);\n    border-bottom: 1px solid var(--color-borders);\n  }\n`;\n\nexport const WrapperText = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  span {\n    margin-left: 20px;\n    font-weight: 500 !important;\n    color: var(--grey);\n  }\n`;\n\nconst iconCSS = css`\n  width: 20px;\n  height: 20px;\n  fill: var(--grey-light) !important;\n  path {\n    color: var(--grey-light) !important;\n  }\n`;\n\nexport const CompanyIcon = styled(Building)`\n  ${iconCSS}\n`;\n\nexport const ArrowIcon = styled(ArrowForwardIos)`\n  ${iconCSS}\n`;\n\nexport const QuotesIcon = styled(HandHoldingUsd)`\n  ${iconCSS}\n`;\n\nexport const AdminIcon = styled(Cog)`\n  ${iconCSS}\n`;\n\nexport const LogoutIcon = styled(PowerOff)`\n  ${iconCSS}\n`;\n\nexport const WrapperProfile = styled.div`\n  display: none;\n  padding: 20px;\n  @media (max-width: 450px) {\n    display: flex;\n  }\n`;\n","import React, { MouseEvent, useCallback } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useMainContext } from '../../Context/Main';\nimport Profile from '../Profile';\nimport {\n  AdminIcon,\n  ArrowIcon,\n  CompanyIcon,\n  Container,\n  LogoutIcon,\n  Nav,\n  QuotesIcon,\n  WrapperLink,\n  WrapperProfile,\n  WrapperText\n} from './styles';\n\nconst Menu: React.FC = () => {\n  const { menuOpen, setMenuOpen, profile } = useMainContext();\n\n  const handleClickMenu = useCallback(\n    (e: MouseEvent<HTMLElement>) => {\n      document.body.classList.toggle('overflow-hidden', !menuOpen);\n      setMenuOpen(!menuOpen);\n    },\n    [menuOpen, setMenuOpen]\n  );\n  // console.log('menu', !!profile);\n  if (!profile) return <></>;\n  return (\n    <Container\n      className={menuOpen ? 'menu-open' : ''}\n      onClick={handleClickMenu}\n    >\n      <Nav className={menuOpen ? 'menu-open' : ''}>\n        <ul>\n          <li>\n            <WrapperLink>\n              <NavLink\n                exact\n                to=\"/registerSupplier\"\n                activeClassName=\"active\"\n                onClick={handleClickMenu}\n              >\n                <WrapperText>\n                  <CompanyIcon />\n                  <span>Cadastro Fornecedor</span>\n                </WrapperText>\n                <div>\n                  <ArrowIcon />\n                </div>\n              </NavLink>\n            </WrapperLink>\n          </li>\n          <li>\n            <WrapperLink>\n              <NavLink\n                exact\n                to=\"/\"\n                activeClassName=\"active\"\n                onClick={handleClickMenu}\n              >\n                <WrapperText>\n                  <QuotesIcon />\n                  <span>Cotações</span>\n                </WrapperText>\n                <ArrowIcon />\n              </NavLink>\n            </WrapperLink>\n          </li>\n          {profile?.IsAdm && (\n            <li>\n              <WrapperLink className=\"admin\">\n                <NavLink\n                  exact\n                  to=\"/admin\"\n                  activeClassName=\"active\"\n                  onClick={handleClickMenu}\n                >\n                  <WrapperText>\n                    <AdminIcon />\n                    <span>Administrativo</span>\n                  </WrapperText>\n                  <ArrowIcon />\n                </NavLink>\n              </WrapperLink>\n            </li>\n          )}\n          <li>\n            <WrapperLink>\n              <NavLink\n                exact\n                to=\"/logout\"\n                activeClassName=\"active\"\n                onClick={handleClickMenu}\n              >\n                <WrapperText>\n                  <LogoutIcon />\n                  <span>Sair</span>\n                </WrapperText>\n                <ArrowIcon />\n              </NavLink>\n            </WrapperLink>\n          </li>\n        </ul>\n        <WrapperProfile>\n          <Profile />\n        </WrapperProfile>\n      </Nav>\n    </Container>\n  );\n};\nexport default React.memo(Menu);\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 100%;\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n\n  > div {\n    padding: 0 35px;\n    display: flex;\n    box-sizing: border-box;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    max-width: 100vw;\n    @media (min-width: 500px) {\n      max-width: 680px;\n    }\n  }\n`;\n","import styled, { css } from 'styled-components';\nimport { SlidersH, Close } from '../../styles/Icons';\n\nexport const Container = styled.header`\n  position: sticky;\n  left: 0;\n  right: 0;\n  top: 0;\n  background-color: var(--white);\n  height: 70px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  box-shadow: var(--shadow-header);\n  max-width: 100vw;\n  z-index: 3;\n`;\n\nexport const WrapperMenu = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 13px 0;\n`;\n\nexport const ButtonMenu = styled.button`\n  background-color: var(--background);\n  padding: 22.5px;\n  border-radius: 0 0 15px 0;\n  position: relative;\n  .open {\n    transform: scale(1);\n  }\n`;\n\nconst iconCSS = css`\n  width: 25px;\n  height: 25px;\n  fill: var(--primary);\n  cursor: pointer;\n  display: flex;\n`;\n\nexport const IconMenuOpened = styled(SlidersH)`\n  ${iconCSS}\n  transform: scale(0);\n  transition: transform 0.35s ease-in-out;\n`;\n\nexport const IconMenuClosed = styled(Close)`\n  ${iconCSS}\n  transform: scale(0);\n  transition: transform 0.35s ease-in-out;\n  position: absolute;\n`;\n\nexport const LogoCompany = styled.img`\n  margin-left: 15px;\n  height: 45px;\n`;\n\nexport const WrapperProfile = styled.div`\n  display: none;\n  @media (min-width: 450px) {\n    display: flex;\n  }\n`;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useMainContext } from '../../Context/Main';\nimport Profile from '../Profile';\nimport {\n  ButtonMenu,\n  Container,\n  IconMenuClosed,\n  IconMenuOpened,\n  LogoCompany,\n  WrapperMenu,\n  WrapperProfile\n} from './styles';\n\nconst Header: React.FC = () => {\n  const { menuOpen, setMenuOpen, profile } = useMainContext();\n  const [company, setCompany] = useState('');\n\n  useEffect(() => {\n    const companyName = 'lakatos';\n    setCompany(`/images/${companyName}.svg`);\n  }, []);\n\n  const handleMenu = useCallback(() => {\n    setMenuOpen(!menuOpen);\n    // document.getElementById('root')?.scroll(0, 0);\n    document.body.classList.toggle('overflow-hidden', !menuOpen);\n  }, [menuOpen, setMenuOpen]);\n\n  if (!profile) return <></>;\n  return (\n    <Container>\n      <WrapperMenu>\n        <ButtonMenu type=\"button\" onClick={handleMenu}>\n          <IconMenuClosed className={menuOpen ? 'open' : ''} />\n          <IconMenuOpened className={!menuOpen ? 'open' : ''} />\n        </ButtonMenu>\n        <LogoCompany src={company} />\n      </WrapperMenu>\n      <WrapperProfile>\n        <Profile />\n      </WrapperProfile>\n    </Container>\n  );\n};\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport Routes from '../../Routes';\nimport Loading from '../Loading';\nimport Menu from '../Menu';\nimport { Container, Content } from './styles';\nimport Header from '../Header';\n\nconst Main: React.FC = () => (\n  <>\n    <Header />\n    {/* <BrowserRouter> */}\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Container id=\"main\">\n        <Menu />\n        <Loading />\n        <Content>\n          <Routes />\n        </Content>\n      </Container>\n    </HashRouter>\n    {/* </BrowserRouter> */}\n  </>\n);\n\nexport default Main;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin:0;\n    padding: 0;\n    box-sizing: border-box;\n    color: var(--white)\n  }\n\n  html, body, #root {\n    max-height: 100vh;\n    max-width: 100vw;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n  #root {\n    overflow-y: overlay;\n  }\n\n  .overflow-hidden  #root {\n    overflow: hidden !important;\n  }\n\n /* width */\n  ::-webkit-scrollbar {\n    width: 7px;\n    height: 7px;\n  }\n\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 10px;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n  #root{\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n\n  }\n\n  *, input, button, span {\n    border: 0;\n    outline:0;\n    background: none;\n    font-family: 'Poppins', sans-serif;\n    font-weight: 600;\n    color: var(--primary);\n    font-size:14px;\n  }\n\n  input, select{\n    padding: 8px 10px;\n    @media(max-width: 450px){\n      padding: 12px 10px;\n      font-size:16px;\n    }\n  }\n\n\n  h1,h2,h3{\n    padding: 15px 0;\n  }\n\n  h1{\n    font-size:20px;\n    font-weight: 700;\n    text-transform:uppercase;\n  }\n\n  h2{\n    font-size:16px;\n  }\n\n  label{\n    font-size:10px;\n  }\n  small{\n    font-size:9px;\n    color: var(--color-small);\n  }\n  html {\n    background: var(--background);\n  }\n\n  :root {\n    --background: #F5F6FA;\n    --primary: #003859;\n    --secondary: #37393E;\n    --white: #FFFFFF;\n    --grey-filters: #e5e6e9;\n    --blue-light:#326D8F;\n    --grey-light: #8C91A9;\n    --grey: #58595B;\n    --color-borders: #f5f6fa;\n    --color-label: #6a6c72;\n    --color-text: var(--secondary);\n    --color-small: #6a6c72;\n    --status-default: #6a6c72;\n    --status-open: #326D8F;\n    --status-finalize: #3F8F32;\n    --status-expired: #8F3232;\n    --filter-text: #4F4F4F;\n    --green-csv: #00A976;\n    --black-print: #000;\n    --primary-dark-hover:#003859ed;\n    --secondary-dark-hover:#37393Eed;\n    --placeholder-color: #6a6c7261;\n    --error-alert: #ec3e28;\n    --panel-warning: #fbff0066;\n    --gradient-primary: linear-gradient(180deg,#ffffff00 0%,#003859 100%);\n    --switch-active: #3F8F32;\n    --shadow-default: rgb(0 0 0 / 10%) 0px 4px 4px;\n    --shadow-header: 0px 0px 1px rgba(0, 0, 0, 0.1);\n    --border-select-input: #6a6c7261;\n  }\n`;\n","import React from 'react';\nimport Main from './components/Main';\n\nimport GlobalStyles from './styles/GlobalStyles';\n\nconst App: React.FC = () => (\n  <>\n    <Main />\n    <GlobalStyles />\n  </>\n);\n\nexport default App;\n","/* eslint-disable func-names */\n/* eslint-disable no-extend-native */\n\ndeclare global {\n  interface String {\n    toDate(): Date;\n    toFloat(): number;\n    toDateBr(): string;\n  }\n  interface Number {\n    toFloatBr(): string;\n  }\n  // interface Date {\n\n  // }\n}\n\nString.prototype.toDate = function (this: String) {\n  const date = this.split('/').map(d => parseInt(d, 10));\n\n  return new Date(date[2], date[1] - 1, date[0]);\n};\n\nString.prototype.toFloat = function (this: String) {\n  return parseFloat(this.replaceAll('.', '').replaceAll(',', '.'));\n};\n\nNumber.prototype.toFloatBr = function (this: Number) {\n  return this.toFixed(2).toString().replaceAll('.', ',');\n};\n\nString.prototype.toDateBr = function (this: String) {\n  const date = this?.substring(0, 10).split('-');\n  if (date) {\n    return `${date[2]}/${date[1]}/${date[0]}`;\n  }\n  return this.toString();\n};\n\n// eslint-disable-next-line prettier/prettier\nexport { };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { MainContextProvider } from './Context/Main';\nimport './utils/parses';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainContextProvider>\n      <App />\n    </MainContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}